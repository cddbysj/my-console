{"version":3,"sources":["../descriptions/style/index.jsx","pages/work/helper/index.js","../descriptions/Cell.jsx","../descriptions/Row.jsx","../descriptions/Item.jsx","../descriptions/index.jsx","pages/work/order/orderDetail.module.css","../node_modules/@ant-design/icons-svg/es/asn/RightSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/RightSquareOutlined.js","constants/product.js","pages/work/order/orderDetail.js"],"names":["computeWaterDiameter","flow","waterVelocity","Math","ceil","sqrt","PI","computeCalorie","heatTo","heatFrom","computeThroatDiameter","computeHolesCount","result","computeSteamCount","calorie","steamEnthalpy","computeSteamDiameter","steamCount","steamSpecificHeatCapacity","steamVelocity","round","notEmpty","val","itemPrefixCls","component","span","className","style","bordered","label","content","colon","Component","classNames","colSpan","renderCells","items","prefixCls","type","showLabel","showContent","props","children","key","vertical","row","index","DEFAULT_COLUMN_MAP","xxl","xl","lg","md","sm","xs","getFilledItem","node","rowRestCol","clone","warning","Descriptions","customizePrefixCls","title","column","layout","size","React","getPrefixCls","direction","screens","setScreens","mergedColumn","i","responsiveArray","breakpoint","getColumn","token","newScreens","ResponsiveObserve","rows","childNodes","toArray","n","tmpRow","_a","mergedSpan","getRows","module","exports","RightSquareOutlined","ref","createElement","AntdIcon","Object","assign","icon","RightSquareOutlinedSvg","displayName","forwardRef","HQS_MATRIX","碳钢","DN40","DN65","DN125","DN250","HJ_MATRIX","DN25","DN32","DN50","DN80","DN100","DN150","Text","Title","Paragraph","Panel","OrderDetailPage","useLocation","state","id","consumer","products","date","orderAt","arrivalAt","arrivalMonth","slice","propsPassToSpecPage","map","product","name","quantity","weight","pressure","flangeStandard","material","model","throatDiameter","holesCount","prefix","split","dn","length","dnInlet","dnOutlet","dnSteam","serialNumber","replace","price","PRODUCT","nameplateText","contractItemText","propsPassToCertificatePage","gutter","marginBottom","level","paddingLeft","expandIconPosition","defaultActiveKey","styles","collapsePanel","header","code","copyable","join","background","width","filter","nameplateCard","Item","text","description","to","pathname","ROUTES"],"mappings":"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","file":"static/js/8.9dc30f01.chunk.js","sourcesContent":["import '../../style/index.less';\nimport './index.less';\n","// 喉部水流速度参考值 单位 m/s\r\nconst VELOCITY = 9.1229;\r\n// 蒸汽热焓值参考值 单位 KCal/kg\r\nconst STEAM_ENTHALPY = 656.93;\r\n// QSH-48 对应的斜孔数量\r\nconst STANDARD_HOLES_COUNT = 720;\r\n// QSH-48 对应的蒸汽流量 单位 kg/h\r\nconst STANDARD_STEAM_FLOW = 16724.99;\r\n\r\n// 千焦到千卡的转换系数\r\nconst KJ_TO_KCAL = 4.184;\r\n\r\n// 计算水管的直径\r\nexport const computeWaterDiameter = (flow, waterVelocity) =>\r\n  Math.ceil(2 * Math.sqrt(((flow / 3600 / waterVelocity) * 1000000) / Math.PI));\r\n\r\n// 计算水需要吸收的热量\r\nexport const computeCalorie = (flow, heatTo, heatFrom) =>\r\n  flow * 1000 * (heatTo - heatFrom);\r\n\r\n// 计算喉部直径\r\nexport const computeThroatDiameter = flow =>\r\n  Math.ceil(2 * Math.sqrt((1000000 * flow) / 3600 / VELOCITY / Math.PI));\r\n\r\n// 计算斜孔数量\r\nexport const computeHolesCount = (flow, heatFrom, heatTo) => {\r\n  const heatIn = flow * 1000 * (heatTo - heatFrom); // 吸收热量\r\n  const result =\r\n    (STANDARD_HOLES_COUNT * heatIn) /\r\n    (STEAM_ENTHALPY - heatTo) /\r\n    STANDARD_STEAM_FLOW;\r\n\r\n  return Math.ceil(result);\r\n};\r\n\r\n// 计算蒸汽耗量\r\nexport const computeSteamCount = (calorie, steamEnthalpy, heatTo) =>\r\n  Math.ceil(calorie / (steamEnthalpy / KJ_TO_KCAL - heatTo));\r\n\r\n// 计算蒸汽管道直径\r\nexport const computeSteamDiameter = (\r\n  steamCount, // 蒸汽耗量\r\n  steamSpecificHeatCapacity, // 蒸汽比热容\r\n  steamVelocity // 蒸汽经济流速 25 - 40 m/s 之间\r\n) => {\r\n  return Math.round(\r\n    2 *\r\n      Math.sqrt(\r\n        (1000000 *\r\n          ((steamCount * steamSpecificHeatCapacity) / 3600 / steamVelocity)) /\r\n          Math.PI\r\n      )\r\n  );\r\n};\r\n","import * as React from 'react';\nimport classNames from 'classnames';\nfunction notEmpty(val) {\n    return val !== undefined && val !== null;\n}\nconst Cell = ({ itemPrefixCls, component, span, className, style, bordered, label, content, colon, }) => {\n    const Component = component;\n    if (bordered) {\n        return (<Component className={classNames({\n            [`${itemPrefixCls}-item-label`]: notEmpty(label),\n            [`${itemPrefixCls}-item-content`]: notEmpty(content),\n        }, className)} style={style} colSpan={span}>\n        {notEmpty(label) ? label : content}\n      </Component>);\n    }\n    return (<Component className={classNames(`${itemPrefixCls}-item`, className)} style={style} colSpan={span}>\n      {label && (<span className={classNames(`${itemPrefixCls}-item-label`, {\n        [`${itemPrefixCls}-item-colon`]: colon,\n    })}>\n          {label}\n        </span>)}\n      {content && <span className={classNames(`${itemPrefixCls}-item-content`)}>{content}</span>}\n    </Component>);\n};\nexport default Cell;\n","import * as React from 'react';\nimport Cell from './Cell';\nfunction renderCells(items, { colon, prefixCls, bordered }, { component, type, showLabel, showContent }) {\n    return items.map(({ props: { label, children, prefixCls: itemPrefixCls = prefixCls, className, style, span = 1, }, key, }, index) => {\n        if (typeof component === 'string') {\n            return (<Cell key={`${type}-${key || index}`} className={className} style={style} span={span} colon={colon} component={component} itemPrefixCls={itemPrefixCls} bordered={bordered} label={showLabel ? label : null} content={showContent ? children : null}/>);\n        }\n        return [\n            <Cell key={`label-${key || index}`} className={className} style={style} span={1} colon={colon} component={component[0]} itemPrefixCls={itemPrefixCls} bordered={bordered} label={label}/>,\n            <Cell key={`content-${key || index}`} className={className} style={style} span={span * 2 - 1} component={component[1]} itemPrefixCls={itemPrefixCls} bordered={bordered} content={children}/>,\n        ];\n    });\n}\nconst Row = props => {\n    const { prefixCls, vertical, row, index, bordered } = props;\n    if (vertical) {\n        return (<>\n        <tr key={`label-${index}`} className={`${prefixCls}-row`}>\n          {renderCells(row, props, { component: 'th', type: 'label', showLabel: true })}\n        </tr>\n        <tr key={`content-${index}`} className={`${prefixCls}-row`}>\n          {renderCells(row, props, {\n            component: 'td',\n            type: 'content',\n            showContent: true,\n        })}\n        </tr>\n      </>);\n    }\n    return (<tr key={index} className={`${prefixCls}-row`}>\n      {renderCells(row, props, {\n        component: bordered ? ['th', 'td'] : 'td',\n        type: 'item',\n        showLabel: true,\n        showContent: true,\n    })}\n    </tr>);\n};\nexport default Row;\n","const DescriptionsItem = ({ children }) => children;\nexport default DescriptionsItem;\n","/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Row from './Row';\nimport DescriptionsItem from './Item';\nconst DEFAULT_COLUMN_MAP = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nfunction getColumn(column, screens) {\n    if (typeof column === 'number') {\n        return column;\n    }\n    if (typeof column === 'object') {\n        for (let i = 0; i < responsiveArray.length; i++) {\n            const breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && column[breakpoint] !== undefined) {\n                return column[breakpoint] || DEFAULT_COLUMN_MAP[breakpoint];\n            }\n        }\n    }\n    return 3;\n}\nfunction getFilledItem(node, span, rowRestCol) {\n    let clone = node;\n    if (span === undefined || span > rowRestCol) {\n        clone = React.cloneElement(node, {\n            span: rowRestCol,\n        });\n        warning(span === undefined, 'Descriptions', 'Sum of column `span` in a line not match `column` of Descriptions.');\n    }\n    return clone;\n}\nfunction getRows(children, column) {\n    const childNodes = toArray(children).filter(n => n);\n    const rows = [];\n    let tmpRow = [];\n    let rowRestCol = column;\n    childNodes.forEach((node, index) => {\n        var _a;\n        const span = (_a = node.props) === null || _a === void 0 ? void 0 : _a.span;\n        const mergedSpan = span || 1;\n        // Additional handle last one\n        if (index === childNodes.length - 1) {\n            tmpRow.push(getFilledItem(node, span, rowRestCol));\n            rows.push(tmpRow);\n            return;\n        }\n        if (mergedSpan < rowRestCol) {\n            rowRestCol -= mergedSpan;\n            tmpRow.push(node);\n        }\n        else {\n            tmpRow.push(getFilledItem(node, mergedSpan, rowRestCol));\n            rows.push(tmpRow);\n            rowRestCol = column;\n            tmpRow = [];\n        }\n    });\n    return rows;\n}\nfunction Descriptions({ prefixCls: customizePrefixCls, title, column = DEFAULT_COLUMN_MAP, colon = true, bordered, layout, children, className, style, size, }) {\n    const { getPrefixCls, direction } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n    const [screens, setScreens] = React.useState({});\n    const mergedColumn = getColumn(column, screens);\n    // Responsive\n    React.useEffect(() => {\n        const token = ResponsiveObserve.subscribe(newScreens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            setScreens(newScreens);\n        });\n        return () => {\n            ResponsiveObserve.unsubscribe(token);\n        };\n    }, []);\n    // Children\n    const rows = getRows(children, mergedColumn);\n    return (<div className={classNames(prefixCls, className, {\n        [`${prefixCls}-${size}`]: size && size !== 'default',\n        [`${prefixCls}-bordered`]: !!bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} style={style}>\n      {title && <div className={`${prefixCls}-title`}>{title}</div>}\n\n      <div className={`${prefixCls}-view`}>\n        <table>\n          <tbody>\n            {rows.map((row, index) => (<Row key={index} index={index} colon={colon} prefixCls={prefixCls} vertical={layout === 'vertical'} bordered={bordered} row={row}/>))}\n          </tbody>\n        </table>\n      </div>\n    </div>);\n}\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsePanel\":\"orderDetail_collapsePanel__2kY4f\",\"nameplateCard\":\"orderDetail_nameplateCard__3FrmT\"};","// This icon file is generated automatically.\n// tslint:disable\nvar RightSquareOutlined = { \"name\": \"right-square\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M412.7 696.5l246-178c4.4-3.2 4.4-9.7 0-12.9l-246-178c-5.3-3.8-12.7 0-12.7 6.5V381c0 10.2 4.9 19.9 13.2 25.9L558.6 512 413.2 617.2c-8.3 6-13.2 15.6-13.2 25.9V690c0 6.5 7.4 10.3 12.7 6.5z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] } };\nexport default RightSquareOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport RightSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/RightSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RightSquareOutlined = function RightSquareOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: RightSquareOutlinedSvg\n  }));\n};\n\nRightSquareOutlined.displayName = 'RightSquareOutlined';\nexport default React.forwardRef(RightSquareOutlined);","// 与加热器等产品相关的常量\r\n\r\n// 管道式加热器 型号到价格的映射表\r\nexport const HQS_MATRIX = {\r\n  碳钢: {\r\n    DN40: 510,\r\n    DN65: 540,\r\n    DN125: 1420,\r\n    DN250: 3050,\r\n  },\r\n  '304': {\r\n    DN40: 920,\r\n    DN65: 1960,\r\n    DN125: 4660,\r\n    DN250: 10550,\r\n  },\r\n  '316L': {\r\n    DN40: 1380,\r\n    DN65: 2490,\r\n    DN125: 6990,\r\n    DN250: 15825,\r\n  },\r\n  '外壳碳钢 芯体304': {\r\n    DN40: 640,\r\n    DN65: 730,\r\n    DN125: 2410,\r\n    DN250: 6500,\r\n  },\r\n};\r\n\r\n// 加热器 型号到价格的映射表\r\nexport const HJ_MATRIX = {\r\n  碳钢: {\r\n    DN25: 260,\r\n    DN32: 260,\r\n    DN40: 260,\r\n    DN50: 280,\r\n    DN65: 280,\r\n    DN80: 460,\r\n    DN100: 460,\r\n    DN125: 620,\r\n    DN150: 850,\r\n  },\r\n  '304': {\r\n    DN25: 460,\r\n    DN32: 460,\r\n    DN40: 460,\r\n    DN50: 700,\r\n    DN65: 700,\r\n    DN80: 900,\r\n    DN100: 900,\r\n    DN125: 1150,\r\n    DN150: 1150,\r\n  },\r\n  '316L': {\r\n    DN25: 560,\r\n    DN32: 560,\r\n    DN40: 560,\r\n    DN50: 830,\r\n    DN65: 830,\r\n    DN80: 1050,\r\n    DN100: 1050,\r\n    DN125: 1400,\r\n    DN150: 1700,\r\n  },\r\n};\r\n","// ** 产品详情页 ** //\r\nimport React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport {\r\n  Descriptions,\r\n  Typography,\r\n  Button,\r\n  Collapse,\r\n  Row,\r\n  Col,\r\n  Empty,\r\n} from 'antd';\r\nimport { RightSquareOutlined } from '@ant-design/icons';\r\nimport * as ROUTES from 'constants/routes';\r\nimport * as PRODUCT from 'constants/product';\r\nimport { computeHolesCount, computeThroatDiameter } from '../helper';\r\nimport styles from './orderDetail.module.css';\r\n\r\nconst { Text, Title, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst OrderDetailPage = () => {\r\n  let {\r\n    id,\r\n    consumer,\r\n    products,\r\n    date: { orderAt, arrivalAt },\r\n  } = useLocation().state;\r\n\r\n  const arrivalMonth = arrivalAt.slice(0, 7);\r\n\r\n  products = products.map(product => {\r\n    const {\r\n      name,\r\n      flow,\r\n      heatFrom,\r\n      heatTo,\r\n      quantity,\r\n      weight,\r\n      pressure,\r\n      flangeStandard,\r\n      material,\r\n      model,\r\n    } = product;\r\n\r\n    // 喉部直径由流量推算出\r\n    const throatDiameter = computeThroatDiameter(flow);\r\n    // 斜孔数量由流量和温差共同推算出\r\n    const holesCount = computeHolesCount(flow, heatFrom, heatTo);\r\n\r\n    // 根据产品型号推算三个口径，特殊型号后续自行修改\r\n    // HQS-125-20G --> ['HQS', 125, 20, 'G']\r\n    // HJ-50C --> ['HJ', '50C']\r\n    const prefix = name.split('-')[0];\r\n    const dn =\r\n      model === 'HQS'\r\n        ? `DN${name.split('-')[1]}`\r\n        : `DN${name.split('-')[1].slice(0, name.split('-')[1].length - 1)}`;\r\n    const dnInlet = dn; // 进水口径\r\n    const dnOutlet = dn; // 出水口径\r\n    const dnSteam = prefix === 'JRG' ? `DN150` : dn; // 蒸汽口径\r\n\r\n    // 生产编号\r\n    const serialNumber = `${orderAt.replace(/-/g, '')}01`;\r\n\r\n    // 产品单价\r\n    const price =\r\n      model === 'HQS'\r\n        ? PRODUCT.HQS_MATRIX[material][dn]\r\n        : PRODUCT.HJ_MATRIX[material][dn];\r\n\r\n    const nameplateText = `\r\n  产品型号: ${product.name}\r\n  数量: ${quantity}\r\n  下单日期: ${orderAt}\r\n  出厂日期: ${arrivalMonth}\r\n  销售客户: ${consumer}\r\n  编号: ${serialNumber}\r\n  流量 t/h: ${flow}\r\n  重量 kg: ${weight}\r\n  压力 MPa: ${pressure}\r\n`;\r\n    // 合同内单类别产品信息\r\n    const contractItemText =\r\n      model === 'HQS'\r\n        ? `法兰标准：${flangeStandard}。材质 ${material}，进水侧口径 ${dnInlet}，出水侧口径 ${dnOutlet}，蒸汽侧口径 ${dnSteam}，喉径 ${throatDiameter}mm，斜孔数 ${holesCount}，斜孔直径 3.5mm，角度与水平线成 30℃。`\r\n        : `法兰标准：${flangeStandard}。材质 ${material}，口径 ${dn}`;\r\n\r\n    return {\r\n      ...product,\r\n      throatDiameter,\r\n      holesCount,\r\n      dnInlet,\r\n      dnOutlet,\r\n      dnSteam,\r\n      material,\r\n      price,\r\n      serialNumber,\r\n      nameplateText,\r\n      contractItemText,\r\n    };\r\n  });\r\n\r\n  // 传递给技术参数页面的属性，仅传递与技术参数相关属性\r\n  const propsPassToSpecPage = products.map(\r\n    ({\r\n      name,\r\n      flow,\r\n      heatFrom,\r\n      heatTo,\r\n      quantity,\r\n      weight,\r\n      pressure,\r\n      flangeStandard,\r\n      model,\r\n      throatDiameter,\r\n      holesCount,\r\n      dnInlet,\r\n      dnOutlet,\r\n      dnSteam,\r\n      material,\r\n    }) => ({\r\n      name,\r\n      flow,\r\n      heatFrom,\r\n      heatTo,\r\n      quantity,\r\n      weight,\r\n      pressure,\r\n      flangeStandard,\r\n      model,\r\n      throatDiameter,\r\n      holesCount,\r\n      dnInlet,\r\n      dnOutlet,\r\n      dnSteam,\r\n      material,\r\n    })\r\n  );\r\n\r\n  // 传递给合格证页面的属性\r\n  const propsPassToCertificatePage = {\r\n    id,\r\n    arrivalAt,\r\n    products: products.map(({ name, model, quantity }) => ({\r\n      name,\r\n      model,\r\n      quantity,\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[0, 80]} style={{ marginBottom: 64 }}>\r\n        <Col span={6}>\r\n          <Title level={4} type=\"secondary\">\r\n            产品清单\r\n          </Title>\r\n        </Col>\r\n        <Col span={18} style={{ paddingLeft: 16 }}>\r\n          <Collapse\r\n            expandIconPosition=\"right\"\r\n            bordered={false}\r\n            defaultActiveKey={['dn']}\r\n          >\r\n            {products.map(product => (\r\n              <Panel\r\n                className={styles.collapsePanel}\r\n                header={\r\n                  <div>\r\n                    {product.name} <Text code>{product.quantity}</Text>\r\n                  </div>\r\n                }\r\n                key={product.name}\r\n              >\r\n                <p>{product.contractItemText}</p>\r\n                <p>\r\n                  单价 ￥{product.price}，{product.quantity} 台共计 ￥\r\n                  {product.price * product.quantity}\r\n                </p>\r\n              </Panel>\r\n            ))}\r\n          </Collapse>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[0, 80]} style={{ marginBottom: 64 }}>\r\n        <Col span={6}>\r\n          <Title level={4} type=\"secondary\">\r\n            CRM 辅助文本\r\n          </Title>\r\n        </Col>\r\n        <Col span={18} style={{ paddingLeft: 16 }}>\r\n          <Collapse\r\n            expandIconPosition=\"right\"\r\n            bordered={false}\r\n            defaultActiveKey={['purchaseTitle']}\r\n          >\r\n            <Panel\r\n              className={styles.collapsePanel}\r\n              header=\"采购主题\"\r\n              key=\"purchaseTitle\"\r\n            >\r\n              <Paragraph copyable>\r\n                {consumer}{' '}\r\n                {products\r\n                  .map(product => `${product.name} ${product.quantity} 台 `)\r\n                  .join('')}\r\n              </Paragraph>\r\n            </Panel>\r\n            <Panel\r\n              className={styles.collapsePanel}\r\n              header={<div>产品明细</div>}\r\n              key=\"productsInfo\"\r\n            >\r\n              {products.map((product, index) => (\r\n                <Collapse key={product.name} defaultActiveKey=\"0\">\r\n                  <Panel header={product.name} key={index}>\r\n                    <p>品名：{product.model}</p>\r\n                    <p>型号：{product.name}</p>\r\n                    <p>数量：{product.quantity}</p>\r\n                    <p>单价：￥{product.price}</p>\r\n                    <p>金额：￥{product.quantity * product.price}</p>\r\n                    <div>\r\n                      备注：<Text copyable>{product.contractItemText}</Text>\r\n                    </div>\r\n                  </Panel>\r\n                </Collapse>\r\n              ))}\r\n            </Panel>\r\n          </Collapse>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[8, 80]} style={{ background: '#fafafa', width: '100%' }}>\r\n        <Col span={6}>\r\n          <Title level={4} type=\"secondary\">\r\n            铭牌\r\n          </Title>\r\n        </Col>\r\n        <Col span={18}>\r\n          {products.filter(product => product.model === 'HQS').length ? (\r\n            products\r\n              .filter(product => product.model === 'HQS')\r\n              .map(product => (\r\n                <Descriptions\r\n                  key={product.name}\r\n                  className={styles.nameplateCard}\r\n                >\r\n                  <Descriptions.Item label=\"产品型号\" span={3}>\r\n                    {product.name}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"销售客户\" span={3}>\r\n                    {consumer}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"数量\" span={3}>\r\n                    {product.quantity}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"下单日期\" span={3}>\r\n                    {orderAt}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"出厂日期\" span={3}>\r\n                    {arrivalMonth}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"编号\" span={3}>\r\n                    {product.serialNumber}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"流量\" span={3}>\r\n                    {product.flow} t/h\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"重量\" span={3}>\r\n                    {product.weight} kg\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"压力\" span={3}>\r\n                    {product.pressure} MPa\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"铭牌纯文本\" span={3}>\r\n                    <Text copyable={{ text: product.nameplateText }}>复制</Text>\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              ))\r\n          ) : (\r\n            <Empty description=\"当前订单没有铭牌信息\" />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16, 80]}>\r\n        <Col span={6}>\r\n          <div>\r\n            <Title level={4} type=\"secondary\">\r\n              链接\r\n            </Title>\r\n          </div>\r\n        </Col>\r\n        <Col span={18}>\r\n          <div>\r\n            <div>\r\n              <Link\r\n                to={{\r\n                  pathname: `${ROUTES.ORDER_CONTRACT}/${id}`,\r\n                  state: { id, products, date: { orderAt, arrivalAt } },\r\n                }}\r\n              >\r\n                <Button type=\"link\" icon={<RightSquareOutlined />}>\r\n                  采购合同\r\n                </Button>\r\n              </Link>\r\n              <Link\r\n                to={{\r\n                  pathname: `${ROUTES.CERTIFICATE_PAGE}/${id}`,\r\n                  state: propsPassToCertificatePage,\r\n                }}\r\n              >\r\n                <Button type=\"link\" icon={<RightSquareOutlined />}>\r\n                  产品合格证\r\n                </Button>\r\n              </Link>\r\n              <Link\r\n                to={{\r\n                  pathname: `${ROUTES.ORDER_SPEC}/${id}`,\r\n                  state: propsPassToSpecPage,\r\n                }}\r\n              >\r\n                <Button type=\"link\" icon={<RightSquareOutlined />}>\r\n                  技术参数\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetailPage;\r\n"],"sourceRoot":""}