{"version":3,"sources":["pages/my/bookmark.module.css","constants/index.js","pages/my/createBookmark.js","pages/my/bookmarkList.js","pages/my/bookmarkPage.js","pages/my/index.js"],"names":["module","exports","SITE_CATEGORIES","PALETTE","Option","CreateBookmark","addSite","useState","visible","setVisible","onDrawerClose","type","icon","PlusOutlined","onClick","title","placement","closable","onClose","width","onFinish","values","a","async","createAt","Date","now","message","success","labelCol","span","wrapperCol","initialValues","category","Item","name","label","rules","required","whitespace","autoFocus","placeholder","map","c","key","value","offset","style","marginRight","htmlType","Link","RandomAvatar","index","Math","floor","length","random","randomColor","className","styles","randomAvatar","backgroundColor","slice","BookmarkList","sites","gutter","groupSites","filter","site","id","replace","TagOutlined","href","url","target","rel","card","hoverable","Meta","description","avatar","Content","BookmarkPage","props","setSites","useEffect","firebase","onSnapshot","snapshot","forEach","doc","push","data","padding","minHeight","createSite","My","path","useRouteMatch"],"mappings":"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","file":"static/js/11.83fa608d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"randomAvatar\":\"bookmark_randomAvatar__2XAxb\",\"category\":\"bookmark_category__34aDb\",\"card\":\"bookmark_card__RUyiF\"};","// 个人网址导航分类\r\nexport const SITE_CATEGORIES = [\r\n  \"Awesome\",\r\n  \"Front End\",\r\n  \"Online Tools\",\r\n  \"Blog\",\r\n  \"Front End Team\",\r\n  \"Ebook\",\r\n  \"News\",\r\n  \"Search Engine\",\r\n  \"Encyclopedia\",\r\n  \"Photography Gallery\",\r\n  \"Others\"\r\n];\r\n\r\n// 网址卡片图标的调色板\r\nexport const PALETTE = [\r\n  \"#1abc9c\",\r\n  \"#2ecc71\",\r\n  \"#3498db\",\r\n  \"#9b59b6\",\r\n  \"#34495e\",\r\n  \"#16a085\",\r\n  \"#27ae60\",\r\n  \"#2980b9\",\r\n  \"#8e44ad\",\r\n  \"#2c3e50\",\r\n  \"#f1c40f\",\r\n  \"#e67e22\",\r\n  \"#e74c3c\",\r\n  \"#95a5a6\",\r\n  \"#f39c12\",\r\n  \"#d35400\",\r\n  \"#c0392b\",\r\n  \"#7f8c8d\",\r\n  \"#bdc3c7\"\r\n];","import React, { useState } from 'react';\r\nimport { Button, Drawer, Form, Input, message, Select } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { SITE_CATEGORIES } from 'constants/index';\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateBookmark = ({ addSite }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => setVisible(true);\r\n\r\n  const onDrawerClose = () => setVisible(false);\r\n\r\n  const onFinish = async values => {\r\n    await addSite({ ...values, createAt: Date.now() });\r\n    onDrawerClose();\r\n    message.success('添加成功', 0.5);\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<PlusOutlined />}\r\n        onClick={() => showDrawer()}\r\n      >\r\n        添加网址\r\n      </Button>\r\n      <Drawer\r\n        title=\"添加网址\"\r\n        placement=\"left\"\r\n        closable={false}\r\n        onClose={onDrawerClose}\r\n        visible={visible}\r\n        width={400}\r\n      >\r\n        <Form\r\n          onFinish={onFinish}\r\n          {...formItemLayout}\r\n          initialValues={{\r\n            category: SITE_CATEGORIES[0],\r\n          }}\r\n        >\r\n          <Form.Item\r\n            name=\"title\"\r\n            label=\"标题\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入网址标题',\r\n              },\r\n              {\r\n                whitespace: true,\r\n                message: '网址标题不能为空字符',\r\n              },\r\n            ]}\r\n          >\r\n            <Input autoFocus />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"概要\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入描述信息',\r\n              },\r\n              {\r\n                whitespace: true,\r\n                message: '描述信息不能为空字符',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"尽可能简短\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"url\"\r\n            label=\"网址\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入链接',\r\n              },\r\n              {\r\n                whitespace: true,\r\n                message: '链接不能为空字符',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"category\"\r\n            label=\"类别\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入网址类别',\r\n              },\r\n              {\r\n                whitespace: true,\r\n                message: '网址类别不能为空字符',\r\n              },\r\n            ]}\r\n          >\r\n            <Select>\r\n              {SITE_CATEGORIES.map(c => (\r\n                <Option key={c} value={c}>\r\n                  {c}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button onClick={onDrawerClose} style={{ marginRight: 12 }}>\r\n              取消\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确定\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBookmark;\r\n","// ** 书签展示列表，展示型组件 ** //\r\nimport React from 'react';\r\nimport { Card, Row, Col, Anchor } from 'antd';\r\nimport { TagOutlined } from '@ant-design/icons';\r\nimport { SITE_CATEGORIES, PALETTE } from 'constants/index';\r\nimport styles from './bookmark.module.css';\r\n\r\nconst { Link } = Anchor;\r\n\r\nconst RandomAvatar = ({ title }) => {\r\n  const index = Math.floor(PALETTE.length * Math.random());\r\n  const randomColor = PALETTE[index];\r\n\r\n  return (\r\n    <div\r\n      className={styles.randomAvatar}\r\n      style={{ backgroundColor: randomColor }}\r\n    >\r\n      {title.slice(0, 1)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookmarkList = ({ sites }) => {\r\n  return (\r\n    <div>\r\n      <Row gutter={8}>\r\n        <Col span={21}>\r\n          {SITE_CATEGORIES.map(category => {\r\n            const groupSites = sites.filter(site => site.category === category);\r\n            return (\r\n              <div\r\n                key={category}\r\n                id={category.replace(' ', '-')}\r\n                className={styles.category}\r\n              >\r\n                <p>\r\n                  <TagOutlined /> {category}\r\n                </p>\r\n                <Row gutter={[16, 16]} type=\"flex\">\r\n                  {groupSites.map(site => (\r\n                    <Col span={8} key={site.title}>\r\n                      <a\r\n                        href={site.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <Card className={styles.card} hoverable>\r\n                          <Card.Meta\r\n                            title={site.title}\r\n                            description={site.description}\r\n                            avatar={<RandomAvatar title={site.title} />}\r\n                          />\r\n                        </Card>\r\n                      </a>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            );\r\n          })}\r\n        </Col>\r\n        <Col span={3}>\r\n          <Anchor>\r\n            {SITE_CATEGORIES.map(c => (\r\n              <Link key={c} href={`#${c.replace(' ', '-')}`} title={c} />\r\n            ))}\r\n          </Anchor>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookmarkList;\r\n","// ** 个人网址导航，相当于在视觉上扁平展示的书签 ** //\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport firebase from \"api/firebase\";\r\nimport CreateBookmark from \"./createBookmark\";\r\nimport BookmarkList from \"./bookmarkList\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst BookmarkPage = props => {\r\n  const [sites, setSites] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.sites().onSnapshot(snapshot => {\r\n      const sites = [];\r\n      snapshot.forEach(doc => sites.push(doc.data()));\r\n      setSites(sites);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const addSite = async site => {\r\n    await firebase.createSite(site);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Content style={{ padding: 12, minHeight: \"100vh\" }}>\r\n        {sites ? (\r\n          <>\r\n            <CreateBookmark addSite={addSite} />\r\n            <BookmarkList sites={sites} />\r\n          </>\r\n        ) : (\r\n          <Spin />\r\n        )}\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BookmarkPage;\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport BookmarkPage from \"./bookmarkPage\";\r\n\r\nconst My = props => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={path}>\r\n          <BookmarkPage />\r\n        </Route>\r\n        <Route path={`${path}/bookmark`}>\r\n          <BookmarkPage />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default My;\r\n"],"sourceRoot":""}