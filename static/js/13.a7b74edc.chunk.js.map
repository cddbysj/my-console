{"version":3,"sources":["pages/work/order/certificatesManage.js","hooks/useCertificates.js"],"names":["cx","classNames","bind","styles","TabPane","CertificatesManagePage","props","useState","filter","setFilter","certificates","setCertificates","useEffect","firebase","onSnapshot","snapshot","forEach","doc","data","orderId","arrivalAt","products","preparePrintAt","printDone","Object","keys","name","push","useCertificates","initialCardQueue","JSON","parse","localStorage","getItem","cardQueue","setCardQueue","setItem","stringify","removeItem","defaultActiveKey","tab","key","className","Group","onChange","e","target","value","defaultValue","Button","grid","gutter","xl","md","dataSource","renderItem","item","Item","actions","title","PlusCircleTwoTone","onClick","card","a","async","finishCertificatesPrint","prev","message","success","EditTwoTone","EllipsisOutlined","quantity","color","date","Date","toLocaleString","ellipsis","icon","PrinterOutlined","type","window","print","DeleteOutlined","BulbTwoTone","length","cardArea","map","Array","from","index","container","cardHeader","ghost","noPriFnt","MinusOutlined","cardName","console","log","model","slice","cardBody","productName","cardFooter","seal","onFinish","values","format","layout","initialValues","moment","label","rules","required","allowClear","autoFocus","min","max","htmlType"],"mappings":"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","file":"static/js/13.a7b74edc.chunk.js","sourcesContent":["// ** 合格证统一管理页面 ** //\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Tag,\r\n  Spin,\r\n  Tabs,\r\n  List,\r\n  Card,\r\n  Empty,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  InputNumber,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleTwoTone,\r\n  EditTwoTone,\r\n  EllipsisOutlined,\r\n  PrinterOutlined,\r\n  DeleteOutlined,\r\n  BulbTwoTone,\r\n  MinusOutlined\r\n} from \"@ant-design/icons\";\r\nimport firebase from \"api/firebase\";\r\nimport useCertificates from \"hooks/useCertificates\";\r\nimport styles from \"./certificate.module.css\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n// 以中文格式显示时间\r\nconst showTimeInCN = date => new Date(date).toLocaleString(\"zh-Hans-CN\");\r\n\r\nconst CertificatesManagePage = props => {\r\n  const [filter, setFilter] = useState(\"SHOW_ACTIVE\");\r\n  const certificates = useCertificates(filter);\r\n\r\n  // 合格证卡片队列，一次最多打印 9 个。\r\n  const initialCardQueue = JSON.parse(localStorage.getItem(\"cardQueue\")) || [];\r\n  const [cardQueue, setCardQueue] = useState(initialCardQueue);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cardQueue\", JSON.stringify(cardQueue));\r\n    return () => localStorage.removeItem(\"cardQueue\");\r\n  });\r\n\r\n  // 调用 Web API 启用打印机\r\n  const onPrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  // 清空添加到打印队列的合格证\r\n  const onClearAll = () => {\r\n    setCardQueue([]);\r\n  };\r\n\r\n  const addToCardQueue = async card => {\r\n    await firebase.finishCertificatesPrint(card.orderId, true);\r\n    setCardQueue(prev => [card, ...prev]);\r\n    message.success(\"已添加到打印列表\", 0.5);\r\n  };\r\n\r\n  const fillCard = values => {\r\n    console.log(\"received values: \", values);\r\n    const { arrivalAt } = values;\r\n    setCardQueue(prev => [\r\n      { ...values, arrivalAt: arrivalAt.format(\"YYYY-MM\") },\r\n      ...prev\r\n    ]);\r\n    message.success(\"添加合格证成功\", 0.5);\r\n  };\r\n\r\n  const removeCard = cardName => {\r\n    console.log(\"remove card\");\r\n    setCardQueue(prev => prev.filter(card => card.name !== cardName));\r\n  };\r\n\r\n  // 设置合格证可见性：未打印、已打印、全部\r\n  const setVisibilityFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Tabs defaultActiveKey=\"plan\">\r\n      <TabPane tab=\"计划\" key=\"plan\">\r\n        <div className={cx(\"noPrint\", \"planArea\")}>\r\n          <div className={styles.filter}>\r\n            <Radio.Group onChange={setVisibilityFilter} defaultValue=\"未打印\">\r\n              <Radio.Button value=\"SHOW_ACTIVE\">未打印</Radio.Button>\r\n              <Radio.Button value=\"SHOW_ALL\">全部</Radio.Button>\r\n              <Radio.Button value=\"SHOW_COMPLETED\">已打印</Radio.Button>\r\n            </Radio.Group>\r\n          </div>\r\n          <p>\r\n            产品的合格证是以一个订单为基本单位，同一订单内的所有产品合格证应该同时被添加到打印队列，同时完成打印，以及同时被删除。\r\n          </p>\r\n          <p>合格证不足 9 个时，可考虑用常见的浸没式加热器合格证填充。</p>\r\n          {certificates ? (\r\n            <List\r\n              grid={{ gutter: 16, xl: 6, md: 4 }}\r\n              dataSource={certificates}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <Card\r\n                    actions={[\r\n                      <Tooltip title=\"添加到打印列表\">\r\n                        <PlusCircleTwoTone\r\n                          key=\"plus\"\r\n                          onClick={() => addToCardQueue(item)}\r\n                        />\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"未完成的功能\">\r\n                        <EditTwoTone key=\"edit\" />\r\n                      </Tooltip>,\r\n                      <Tooltip title=\"未完成的功能\">\r\n                        <EllipsisOutlined key=\"ellipsis\" />\r\n                      </Tooltip>\r\n                    ]}\r\n                  >\r\n                    <p>{item.name}</p>\r\n                    <p>数量：{item.quantity} 台</p>\r\n                    <p>\r\n                      状态：\r\n                      {item.printDone ? (\r\n                        <Tag color=\"#108ee9\">已打印</Tag>\r\n                      ) : (\r\n                        <Tag color=\"#f50\">未打印</Tag>\r\n                      )}\r\n                    </p>\r\n                    <p>创建日期：</p>\r\n                    <p>{showTimeInCN(item.preparePrintAt)}</p>\r\n                    <p className={styles.ellipsis}>订单号：{item.orderId}</p>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          ) : (\r\n            <Spin />\r\n          )}\r\n        </div>\r\n      </TabPane>\r\n      <TabPane tab=\"预览\" key=\"preview\">\r\n        <div className={cx(\"noPrint\", \"cardActions\")}>\r\n          <Button.Group>\r\n            <Button icon={<PrinterOutlined />} type=\"primary\" onClick={onPrint}>\r\n              打印\r\n            </Button>\r\n            <Button icon={<DeleteOutlined />} type=\"danger\" onClick={onClearAll}>\r\n              清空\r\n            </Button>\r\n          </Button.Group>\r\n          <p>\r\n            <BulbTwoTone />\r\n            <span>\r\n              提示：将鼠标悬停在合格证卡片右上角，可以删除该合格证所属订单所有合格证\r\n            </span>\r\n          </p>\r\n        </div>\r\n        {cardQueue.length ? (\r\n          <div className={styles.cardArea}>\r\n            {cardQueue.map(card =>\r\n              Array.from(new Array(card.quantity)).map((item, index) => (\r\n                <div key={`${card.name}-${card.arrivalAt}-${index}`}>\r\n                  <div className={styles.container}>\r\n                    <section className={styles.cardHeader}>\r\n                      <p className={styles.title}>\r\n                        <span>SEMEM</span>\r\n                        <Button\r\n                          ghost\r\n                          className={styles.noPriFnt}\r\n                          icon={<MinusOutlined />}\r\n                          onClick={() => removeCard(card.name)}\r\n                        />\r\n                      </p>\r\n                      <p>\r\n                        {card.model === \"HQS\"\r\n                          ? card.name.slice(0, 3)\r\n                          : card.model}{\" \"}\r\n                        Heater\r\n                      </p>\r\n                      <p>检验合格证明书</p>\r\n                    </section>\r\n                    <section className={styles.cardBody}>\r\n                      <p>\r\n                        名称：\r\n                        <span className={styles.productName}>{card.name}</span>\r\n                      </p>\r\n                      <p>\r\n                        检验员：<Tag color=\"red\">0306</Tag>\r\n                      </p>\r\n                      <p>检验日期：{card.arrivalAt}</p>\r\n                      <p>本产品经检验合格，符合标准，准予出厂。</p>\r\n                    </section>\r\n                    <section className={styles.cardFooter}>\r\n                      <p className={styles.seal}>\r\n                        <Tag color=\"red\">西门机电品质检验中心</Tag>\r\n                      </p>\r\n                      <p>湖南西门机电科技有限公司</p>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Empty />\r\n        )}\r\n      </TabPane>\r\n      <TabPane tab=\"填充\" key=\"fill\">\r\n        <Form\r\n          onFinish={fillCard}\r\n          layout=\"inline\"\r\n          initialValues={{\r\n            name: \"HJ-50C\",\r\n            quantity: 1,\r\n            model: \"HJ\",\r\n            arrivalAt: moment()\r\n          }}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"产品名称\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入产品名称\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input allowClear autoFocus />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"quantity\"\r\n            label=\"数量\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请指定数量\"\r\n              }\r\n            ]}\r\n          >\r\n            <InputNumber min={1} max={9} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"model\"\r\n            label=\"结构形式\"\r\n            rules={[{ required: true, message: \"请指定结构\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"arrivalAt\"\r\n            label=\"检验日期\"\r\n            rules={[{ required: true, message: \"请指定检验日期\" }]}\r\n          >\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" type=\"primary\">\r\n              添加\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default CertificatesManagePage;\r\n","import { useState, useEffect } from \"react\";\r\nimport firebase from \"../api/firebase\";\r\n\r\nexport default function useCertificates(filter) {\r\n  const [certificates, setCertificates] = useState(null);\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.certificates(filter).onSnapshot(snapshot => {\r\n      const certificates = [];\r\n      snapshot.forEach(doc => {\r\n        // 转化成想要的结构，用于展示\r\n        const {\r\n          orderId,\r\n          arrivalAt,\r\n          products,\r\n          preparePrintAt,\r\n          printDone\r\n        } = doc.data();\r\n        Object.keys(products).forEach(name =>\r\n          certificates.push({\r\n            ...products[name],\r\n            name,\r\n            orderId,\r\n            arrivalAt,\r\n            preparePrintAt,\r\n            printDone\r\n          })\r\n        );\r\n      });\r\n\r\n      setCertificates(certificates);\r\n    });\r\n    return unsubscribe;\r\n  }, [filter]);\r\n\r\n  return certificates;\r\n}\r\n"],"sourceRoot":""}