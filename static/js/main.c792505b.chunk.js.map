{"version":3,"sources":["constants/routes.js","pages/work/order/createOrderForm.module.css","api/firebase/index.js","pages/work/order/certificate.module.css","hooks/useAuth.js","pages/work/order/createOrderForm.js","components/signIn/index.js","components/workStep/index.js","pages/work/order/orderTable.js","pages/work/order/index.js","pages/work/order/certificate.js","App.js","serviceWorker.js","index.js"],"names":["HOME_PAGE","CREATE_ORDER","WORK_ORDERS","WORK_ORDER","ORDER_DETAIL","ORDER_CONTRACT","WORK_CERTIFICATES","CERTIFICATE_PAGE","ORDER_SPEC","WORK_JRQ","WORK_WK","WORK_BUSINESS_INFO","MY_PAGE","QQ_MAIL","CRM","module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","serverTimestamp","firebase","firestore","FieldValue","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","onAuthStateChanged","next","fallback","user","orders","db","collection","orderBy","limit","createOrder","order","a","async","add","removeOrder","id","doc","delete","removeCertificates","toggleNameplatePrint","checked","update","nameplate","toggleCertificatePrint","certificate","certificates","filter","where","createCertificates","certificateInfo","set","finishCertificatesPrint","printDone","sites","createSite","site","initializeApp","this","useAuth","useState","setAuth","useEffect","LoginForm","props","fieldsError","useForm","form","getFieldsError","getFieldError","isFieldTouched","emailError","passwordError","style","display","alignItems","icon","LogoutOutlined","marginLeft","size","onClick","layout","onFinish","values","then","result","message","success","catch","error","Item","validateStatus","help","name","rules","type","required","prefix","MailOutlined","color","placeholder","LockOutlined","htmlType","disabled","Object","keys","some","field","Step","WorkFlowPage","current","setCurrent","onChange","maxWidth","title","to","ROUTES","href","rel","target","RangePicker","initialProduct","model","material","quantity","weight","flow","heatFrom","heatTo","flangeStandard","pressure","initialProducts","index","push","CreateOrderForm","history","useHistory","items","setItems","labelCol","offset","span","wrapperCol","date","products","length","Array","from","product","orderAt","format","arrivalAt","warn","initialValues","moment","label","whitespace","autoFocus","allowClear","width","noStyle","gutter","className","styles","productRow","map","item","key","pull","productCol","Group","defaultValue","value","Option","min","max","Button","step","MinusOutlined","prev","slice","PlusOutlined","Column","Text","OrderTable","onRemoveOrder","onToggleNameplatePrint","onToggleCertificatePrint","dataSource","rowKey","record","pagination","position","dataIndex","render","text","pathname","state","split","renderItem","code","copyable","filters","onFilter","handleToggleNameplatePrint","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","productsInfo","forEach","orderId","preparePrintAt","Date","now","handleCertificateChange","DeleteOutlined","EditOutlined","CopyOutlined","WorkPage","setOrders","onSnapshot","snapshot","data","CertificatePage","useLocation","noPrint","PrinterOutlined","window","print","cardArea","container","cardHeader","cardBody","productName","cardFooter","seal","Header","Content","Sider","BusinessInfo","lazy","WkProduct","MyPage","CertificatesManagePage","JrqProduct","ContractPage","OrderDetailPage","OrderSpecPage","App","basename","overflow","height","left","theme","mode","defaultSelectedKeys","FileAddOutlined","TabletOutlined","FileImageOutlined","FileOutlined","ContactsOutlined","ProjectOutlined","margin","padding","background","textAlign","fontSize","path","exact","children","status","subTitle","Boolean","location","hostname","match","locale","ReactDOM","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c792505b.chunk.js","sourcesContent":["// 主页\r\nexport const HOME_PAGE = \"/\";\r\n// 新建订单\r\nexport const CREATE_ORDER = \"/createOrder\";\r\n// 订单列表\r\nexport const WORK_ORDERS = \"/orders\";\r\n// 单个订单\r\nexport const WORK_ORDER = \"/order\";\r\n// 订单详情页面\r\nexport const ORDER_DETAIL = \"/order/:id\";\r\n// 订单合同页面\r\nexport const ORDER_CONTRACT = \"/order/contract\";\r\n// 合格证统一管理页面\r\nexport const WORK_CERTIFICATES = \"/certificates\";\r\n// 合格证页面，由数据直接生成可打印的合格证\r\nexport const CERTIFICATE_PAGE = \"/order/certificate\";\r\n// 订单技术参数页面\r\nexport const ORDER_SPEC = \"/order/spec\";\r\n// 加热器产品\r\nexport const WORK_JRQ = \"/jrq\";\r\n// 温控产品\r\nexport const WORK_WK = \"/wk\";\r\n// 公司商务信息\r\nexport const WORK_BUSINESS_INFO = \"/business\";\r\n\r\n// 个人事务\r\nexport const MY_PAGE = \"/my\";\r\n\r\n// QQ 邮箱\r\nexport const QQ_MAIL =\r\n  \"https://mail.qq.com/cgi-bin/frame_html?sid=2tq_5c2Dt8fOMkEf&r=ba4f18e27a212e38f7e5be5b900066ce\";\r\n\r\n// XTOOLS CRM\r\nexport const CRM = \"https://crm.xtcrm.com/lib/purchase/\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productRow\":\"createOrderForm_productRow__29jCv\",\"productCol\":\"createOrderForm_productCol__1P6Dg\"};","import firebase from \"firebase/app\";\r\n\r\n// These imports load individual services into the firebase namespace.\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(firebaseConfig);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  // ** Helper ** //\r\n  serverTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\r\n\r\n  // ** Auth ** //\r\n  createUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  signInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  signOut = () => this.auth.signOut();\r\n\r\n  onAuthStateChanged = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(user => (user ? next(user) : fallback()));\r\n\r\n  // ** Orders API ** //\r\n\r\n  // 获取订单列表\r\n  orders = () =>\r\n    this.db\r\n      .collection(\"orders\")\r\n      .orderBy(\"date.orderAt\", \"desc\")\r\n      .limit(100);\r\n\r\n  // 新建订单\r\n  createOrder = async order => await this.db.collection(\"orders\").add(order);\r\n\r\n  // 删除订单\r\n  removeOrder = async id => {\r\n    await this.db\r\n      .collection(\"orders\")\r\n      .doc(id)\r\n      .delete();\r\n    // 同时也要删除掉对应的合格证数据\r\n    await this.removeCertificates(id);\r\n  };\r\n\r\n  // 铭牌打印切换\r\n  toggleNameplatePrint = async (id, checked) =>\r\n    await this.db\r\n      .collection(\"orders\")\r\n      .doc(id)\r\n      .update({\r\n        nameplate: checked\r\n      });\r\n\r\n  // 合格证打印切换\r\n  toggleCertificatePrint = async (id, checked) =>\r\n    await this.db\r\n      .collection(\"orders\")\r\n      .doc(id)\r\n      .update({\r\n        certificate: checked\r\n      });\r\n\r\n  // 获取未打印的合格证\r\n  certificates = (filter = \"SHOW_ACTIVE\") => {\r\n    switch (filter) {\r\n      case \"SHOW_ALL\":\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .orderBy(\"arrivalAt\", \"desc\")\r\n          .limit(30);\r\n      case \"SHOW_COMPLETED\":\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .where(\"printDone\", \"==\", true)\r\n          .orderBy(\"arrivalAt\", \"desc\")\r\n          .limit(30);\r\n      default:\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .where(\"printDone\", \"==\", false)\r\n          .orderBy(\"arrivalAt\", \"desc\");\r\n    }\r\n  };\r\n\r\n  // 新建当前订单的产品合格证\r\n  createCertificates = async (id, certificateInfo) =>\r\n    await this.db\r\n      .collection(\"certificates\")\r\n      .doc(id)\r\n      .set(certificateInfo);\r\n\r\n  // 移除当前订单的产品合格证\r\n  removeCertificates = async id =>\r\n    await this.db\r\n      .collection(\"certificates\")\r\n      .doc(id)\r\n      .delete();\r\n  // 完成某个订单的产品合格证打印\r\n  finishCertificatesPrint = async (id, checked) =>\r\n    await this.db\r\n      .collection(\"certificates\")\r\n      .doc(id)\r\n      .update({ printDone: checked });\r\n\r\n  // ** Sites API ** //\r\n\r\n  // 获取所有个人网址条目\r\n  sites = () => this.db.collection(\"sites\");\r\n\r\n  // 新建一个网址条目\r\n  createSite = async site => await this.db.collection(\"sites\").add(site);\r\n}\r\n\r\nexport default new Firebase();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planArea\":\"certificate_planArea__Ku4DY\",\"ellipsis\":\"certificate_ellipsis__1UwWW\",\"filter\":\"certificate_filter__2Fpk4\",\"cardActions\":\"certificate_cardActions__xKUap\",\"cardArea\":\"certificate_cardArea__2NJDz\",\"container\":\"certificate_container__1oyF_\",\"hiddenButton\":\"certificate_hiddenButton__23geO\",\"cardHeader\":\"certificate_cardHeader__20zAE\",\"title\":\"certificate_title__18uRd\",\"cardBody\":\"certificate_cardBody__3lkfM\",\"cardFooter\":\"certificate_cardFooter__1ml_S\",\"seal\":\"certificate_seal__88Drb\",\"productName\":\"certificate_productName__3mbgT\",\"main\":\"certificate_main__1f8eu\",\"noPrint\":\"certificate_noPrint__3MVFm\"};","import { useState, useEffect } from 'react';\r\nimport firebase from '../api/firebase';\r\n\r\nexport default function useAuth() {\r\n  const [auth, setAuth] = useState(null);\r\n  useEffect(() => {\r\n    firebase.onAuthStateChanged(\r\n      user => setAuth(user),\r\n      () => setAuth(null)\r\n    );\r\n  }, []);\r\n\r\n  return auth;\r\n}\r\n","// ** 新建订单页面 ** //\r\nimport React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Radio,\r\n  DatePicker,\r\n  message,\r\n} from 'antd';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport * as ROUTES from 'constants/routes';\r\nimport firebase from 'api/firebase';\r\nimport useAuth from 'hooks/useAuth';\r\nimport styles from './createOrderForm.module.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n// 订单中产品的初始状态\r\n// 为什么需要这个？ 参考：https://github.com/ant-design/ant-design/issues/21816\r\nconst initialProduct = {\r\n  model: 'HQS',\r\n  material: '304',\r\n  quantity: 1,\r\n  weight: 50,\r\n  flow: 20,\r\n  heatFrom: 5,\r\n  heatTo: 65,\r\n  flangeStandard: 'GB/T 9119-2000',\r\n  pressure: '1.0',\r\n};\r\nconst initialProducts = [];\r\n// 单个订单一般不超过 10 个产品\r\nfor (let index = 0; index < 10; index++) {\r\n  initialProducts.push(initialProduct);\r\n}\r\n\r\nconst CreateOrderForm = props => {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  // 用于动态增删产品\r\n  const [items, setItems] = useState([0]);\r\n\r\n  const addItem = () => setItems(prev => [...prev, 0]);\r\n  const removeItem = () => setItems(prev => prev.slice(0, prev.length - 1));\r\n\r\n  const onFinish = values => {\r\n    if (!auth) {\r\n      message.warn('您没有该权限', 1);\r\n      return;\r\n    }\r\n\r\n    let { date, products } = values;\r\n    // antd v4 改动：嵌套字段使用数组会有一点问题，如下：\r\n    // 假如要选定 products 数组 第一个元素的 name 属性\r\n    // v3 字段路径： 'products.0.name'\r\n    // v4 字段路径：['products', '0', 'name']\r\n    // v4 得到的 products 得到的不是数组，而是属性为数字下标的对象\r\n    // 将 products 添加 length 属性，然后转化为数组\r\n    products.length = Object.keys(products).length;\r\n    products = Array.from(products);\r\n    products.filter(product => product.name);\r\n\r\n    // 下单日期\r\n    const orderAt = date[0].format('YYYY-MM-DD');\r\n    // 到货日期\r\n    const arrivalAt = date[1].format('YYYY-MM-DD');\r\n    // 提交到数据库的单个产品信息\r\n    const order = {\r\n      ...values,\r\n      date: { orderAt, arrivalAt },\r\n      nameplate: false,\r\n      certificate: false,\r\n      products,\r\n    };\r\n    // api\r\n    firebase\r\n      .createOrder(order)\r\n      .then(() => {\r\n        message.success('订单创建成功', 1);\r\n        history.push(ROUTES.WORK_ORDERS);\r\n      })\r\n      .catch(error => message.error(error.message));\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      offset: 2,\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 12,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        date: [moment(), moment().add(7, 'days')],\r\n        products: initialProducts,\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"consumer\"\r\n        label=\"销售客户\"\r\n        wrapperCol={{ span: 8 }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入销售客户',\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: '销售客户不能为空白字符',\r\n          },\r\n        ]}\r\n      >\r\n        <Input autoFocus allowClear />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"date\"\r\n        label=\"货期\"\r\n        wrapperCol={{ span: 8 }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入货期',\r\n          },\r\n        ]}\r\n      >\r\n        <RangePicker style={{ width: '100%' }} />\r\n      </Form.Item>\r\n      <Form.Item noStyle>\r\n        <Row gutter={10} className={styles.productRow}>\r\n          {items.map((item, index) => (\r\n            <Col\r\n              key={index}\r\n              span={8}\r\n              pull={index === 1 ? 8 : 0}\r\n              push={index === 0 ? 8 : 0}\r\n              className={styles.productCol}\r\n            >\r\n              <Form.Item name={['products', `${index}`, 'model']} label=\"款式\">\r\n                <Radio.Group defaultValue=\"HQS\">\r\n                  <Radio value=\"HQS\">HQS</Radio>\r\n                  <Radio value=\"HJ\">HJ</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'name']}\r\n                label=\"产品型号\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '请输入产品型号',\r\n                  },\r\n                  {\r\n                    whitespace: true,\r\n                    message: '产品型号不能为空白字符',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input allowClear />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'material']}\r\n                label=\"材质\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '请指定材质',\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"304\">\r\n                  <Select.Option value=\"304\">304</Select.Option>\r\n                  <Select.Option value=\"碳钢\">碳钢</Select.Option>\r\n                  <Select.Option value=\"外壳碳钢 芯体304\">\r\n                    外壳碳钢 芯体304\r\n                  </Select.Option>\r\n                  <Select.Option value=\"316L\">316L</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'quantity']}\r\n                label=\"数量\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '请输入产品数量',\r\n                  },\r\n                ]}\r\n              >\r\n                <InputNumber min={1} max={99} defaultValue={1} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'weight']}\r\n                label=\"重量 kg\"\r\n              >\r\n                <Radio.Group defaultValue={50}>\r\n                  <Radio.Button value={8}>{8}</Radio.Button>\r\n                  <Radio.Button value={15}>{15}</Radio.Button>\r\n                  <Radio.Button value={50}>{50}</Radio.Button>\r\n                  <Radio.Button value={200}>{200}</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'flow']}\r\n                label=\"流量 t/h\"\r\n              >\r\n                <InputNumber min={1} max={2000} step={10} defaultValue={20} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'heatFrom']}\r\n                label=\"进水温度 °C\"\r\n              >\r\n                <InputNumber min={1} max={160} defaultValue={5} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'heatTo']}\r\n                label=\"出水温度 °C\"\r\n              >\r\n                <InputNumber min={1} max={200} defaultValue={65} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'flangeStandard']}\r\n                label=\"法兰标准\"\r\n              >\r\n                <Select defaultValue=\"GB/T 9119-2000\">\r\n                  <Select.Option value=\"GB/T 9119-2000\">\r\n                    GB/T 9119-2000\r\n                  </Select.Option>\r\n                  <Select.Option value=\"HG/T 20592-2009\">\r\n                    HG/T 20592-2009\r\n                  </Select.Option>\r\n                  <Select.Option value=\"GB/T 9119-2010\">\r\n                    GB/T 9119-2000\r\n                  </Select.Option>\r\n                  <Select.Option value=\"HG/T 20615-2009\">\r\n                    HG/T 20615-2009\r\n                  </Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['products', `${index}`, 'pressure']}\r\n                label=\"压力 MPa\"\r\n              >\r\n                1.0\r\n              </Form.Item>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ span: 8, offset: 8 }}>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ width: '100%' }}\r\n        >\r\n          新建订单\r\n        </Button>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button.Group>\r\n          <Button\r\n            disabled={items.length <= 1}\r\n            icon={<MinusOutlined />}\r\n            onClick={removeItem}\r\n          >\r\n            删除产品\r\n          </Button>\r\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={addItem}>\r\n            增加产品\r\n          </Button>\r\n        </Button.Group>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrderForm;\r\n","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { LogoutOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport firebase from '../../api/firebase';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nconst LoginForm = props => {\r\n  const user = useAuth();\r\n  const email = user && user.email;\r\n\r\n  const onFinish = values => {\r\n    const { email, password } = values;\r\n    firebase\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        message.success('欢迎', 1);\r\n      })\r\n      .catch(error => message.error(error.message));\r\n  };\r\n\r\n  const signOut = () => {\r\n    firebase.signOut();\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n  const { getFieldsError, getFieldError, isFieldTouched } = form;\r\n\r\n  // Only show error after a field is touched.\r\n  const emailError = isFieldTouched('email') && getFieldError('email');\r\n  const passwordError = isFieldTouched('password') && getFieldError('password');\r\n\r\n  return email ? (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <Button\r\n        icon={<LogoutOutlined />}\r\n        style={{ marginLeft: 20 }}\r\n        size=\"small\"\r\n        onClick={signOut}\r\n      >\r\n        登出\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <Form layout=\"inline\" onFinish={onFinish} form={form}>\r\n      <Form.Item\r\n        validateStatus={emailError ? 'error' : ''}\r\n        help={emailError || ''}\r\n        name=\"email\"\r\n        rules={[\r\n          { type: 'email', message: '无效的电子邮箱' },\r\n          { required: true, message: '请输入你的电子邮箱' },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"电子邮件\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        validateStatus={passwordError ? 'error' : ''}\r\n        help={passwordError || ''}\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          disabled={hasErrors(getFieldsError())}\r\n        >\r\n          登录\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// ** 工作步骤组件 ** //\r\nimport React, { useState } from \"react\";\r\nimport { Steps } from \"antd\";\r\nimport * as ROUTES from \"constants/routes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst WorkFlowPage = props => {\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const handleChange = current => {\r\n    setCurrent(current);\r\n  };\r\n\r\n  return (\r\n    <Steps\r\n      current={current}\r\n      size=\"small\"\r\n      onChange={handleChange}\r\n      style={{ maxWidth: 900 }}\r\n    >\r\n      <Step title={<Link to={ROUTES.WORK_JRQ}>参数确认</Link>} />\r\n      <Step title={<Link to={ROUTES.CREATE_ORDER}>新建订单</Link>} />\r\n      <Step\r\n        title={\r\n          <a href={ROUTES.QQ_MAIL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            发送合同\r\n          </a>\r\n        }\r\n      />\r\n      <Step\r\n        title={\r\n          <a href={ROUTES.CRM} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            XTools\r\n          </a>\r\n        }\r\n      />\r\n      <Step title={<Link to={ROUTES.WORK_ORDERS}>铭牌打印</Link>} />\r\n      <Step title={<Link to={ROUTES.WORK_CERTIFICATES}>合格证打印</Link>} />\r\n    </Steps>\r\n  );\r\n};\r\n\r\nexport default WorkFlowPage;\r\n","// ** 合同列表页面 ** //\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Divider,\r\n  Button,\r\n  Switch,\r\n  List,\r\n  Typography,\r\n  Tag,\r\n  message\r\n} from \"antd\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nimport * as ROUTES from \"constants/routes\";\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\nconst { Column } = Table;\r\nconst { Text } = Typography;\r\n\r\nconst OrderTable = props => {\r\n  const history = useHistory();\r\n  const auth = useAuth();\r\n\r\n  const {\r\n    orders,\r\n    onRemoveOrder,\r\n    onToggleNameplatePrint,\r\n    onToggleCertificatePrint,\r\n    createCertificates,\r\n    removeCertificates\r\n  } = props;\r\n\r\n  const goCreateOrder = () => history.push(ROUTES.CREATE_ORDER);\r\n\r\n  const handleCertificateChange = async (record, checked) => {\r\n    const {\r\n      id,\r\n      products,\r\n      date: { arrivalAt }\r\n    } = record;\r\n\r\n    if (!auth) {\r\n      message.warn(\"您没有该权限\");\r\n      return;\r\n    }\r\n\r\n    await onToggleCertificatePrint(id, checked);\r\n    // firestore 对于元素类型为对象的数组支持比较差\r\n    // 为了适应 firestore 的数据结构，将 products 转化成对象结构\r\n    const productsInfo = {};\r\n    products.forEach(product => {\r\n      const { name, quantity, model } = product;\r\n      productsInfo[name] = {\r\n        model,\r\n        quantity\r\n      };\r\n    });\r\n    const certificateInfo = {\r\n      arrivalAt, // 用作检验日期\r\n      orderId: id, // 对应的订单 id\r\n      products: productsInfo,\r\n      printDone: false, // 是否已打印\r\n      preparePrintAt: Date.now() // 准备打印日期\r\n    };\r\n    // 选中则新建该订单下所有产品的合格证，不选中则删除该订单下所有产品的合格证\r\n    checked\r\n      ? await createCertificates(id, certificateInfo)\r\n      : await removeCertificates(id);\r\n  };\r\n\r\n  const handleToggleNameplatePrint = async (id, checked) => {\r\n    if (!auth) {\r\n      message.warn(\"您没有该权限\");\r\n      return;\r\n    }\r\n    await onToggleNameplatePrint(id, checked);\r\n  };\r\n\r\n  const handleRemoveOrder = async orderId => {\r\n    if (!auth) {\r\n      message.warn(\"您没有该权限\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await onRemoveOrder(orderId);\r\n      message.success(\"删除订单成功\", 1);\r\n    } catch (error) {\r\n      message.error(\"删除订单失败\", 2.5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={goCreateOrder}>\r\n        新建订单\r\n      </Button>\r\n      <Table\r\n        dataSource={orders}\r\n        rowKey={record => record.id}\r\n        pagination={{ position: \"top\" }}\r\n        size=\"middle\"\r\n      >\r\n        <Column\r\n          title=\"产品\"\r\n          dataIndex=\"product\"\r\n          key=\"product\"\r\n          render={(text, record) => (\r\n            <Link\r\n              to={{\r\n                pathname: `${ROUTES.WORK_ORDER}/${record.id}`,\r\n                state: record\r\n              }}\r\n            >\r\n              <List\r\n                size=\"small\"\r\n                split={false}\r\n                dataSource={record.products}\r\n                renderItem={product => (\r\n                  <List.Item>\r\n                    <span>\r\n                      <Tag color=\"blue\">\r\n                        <span>{product.name}</span>\r\n                      </Tag>\r\n                      <Text code>\r\n                        <span>{product.quantity}</span>\r\n                      </Text>\r\n                    </span>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Link>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"销售客户\"\r\n          dataIndex=\"consumer\"\r\n          key=\"consumer\"\r\n          render={text => <Text copyable>{text}</Text>}\r\n        />\r\n        <Column\r\n          title=\"采购日期\"\r\n          dataIndex=\"orderAt\"\r\n          key=\"orderAt\"\r\n          render={(text, record) => (\r\n            <span>{record.date && record.date.orderAt}</span>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"铭牌\"\r\n          dataIndex=\"nameplate\"\r\n          key=\"nameplate\"\r\n          filters={[\r\n            { text: \"已打印\", value: true },\r\n            { text: \"未打印\", value: false }\r\n          ]}\r\n          onFilter={(value, record) => record.nameplate === value}\r\n          render={(text, record) => (\r\n            <Switch\r\n              checked={record.nameplate}\r\n              onChange={checked =>\r\n                handleToggleNameplatePrint(record.id, checked)\r\n              }\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              defaultChecked\r\n            />\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"合格证\"\r\n          dataIndex=\"certificate\"\r\n          key=\"certificate\"\r\n          filters={[\r\n            { text: \"已打印\", value: true },\r\n            { text: \"未打印\", value: false }\r\n          ]}\r\n          onFilter={(value, record) => record.certificate === value}\r\n          render={(text, record) => (\r\n            <Switch\r\n              checked={record.certificate}\r\n              onChange={checked => handleCertificateChange(record, checked)}\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              defaultChecked\r\n            />\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"操作\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <span>\r\n              <Button\r\n                type=\"link\"\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => handleRemoveOrder(record.id)}\r\n              />\r\n              <Divider type=\"vertical\" />\r\n              <Button type=\"link\" icon={<EditOutlined />} />\r\n              <Divider type=\"vertical\" />\r\n              <Button type=\"link\" icon={<CopyOutlined />} />\r\n            </span>\r\n          )}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport firebase from \"api/firebase\";\r\nimport OrderTable from \"./orderTable\";\r\n\r\nconst WorkPage = props => {\r\n  const [orders, setOrders] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.orders().onSnapshot(snapshot => {\r\n      const orders = [];\r\n      // doc.data() 得到的仅仅是用于展示目的的数据，拼接 id 属性进去，利于后续操作单个对应的订单\r\n      snapshot.forEach(doc => orders.push({ ...doc.data(), id: doc.id }));\r\n      setOrders(orders);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const removeOrder = async id => {\r\n    await firebase.removeOrder(id);\r\n  };\r\n\r\n  const toggleNameplatePrint = async (id, checked) => {\r\n    await firebase.toggleNameplatePrint(id, checked);\r\n  };\r\n\r\n  const toggleCertificatePrint = async (id, checked) => {\r\n    await firebase.toggleCertificatePrint(id, checked);\r\n  };\r\n\r\n  const createCertificates = async (id, certificateInfo) => {\r\n    await firebase.createCertificates(id, certificateInfo);\r\n  };\r\n\r\n  const removeCertificates = async id => await firebase.removeCertificates(id);\r\n\r\n  return (\r\n    <div>\r\n      {orders ? (\r\n        <OrderTable\r\n          orders={orders}\r\n          onRemoveOrder={removeOrder}\r\n          onToggleNameplatePrint={toggleNameplatePrint}\r\n          onToggleCertificatePrint={toggleCertificatePrint}\r\n          createCertificates={createCertificates}\r\n          removeCertificates={removeCertificates}\r\n        />\r\n      ) : (\r\n        <Spin />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkPage;\r\n","// ** 合格证页面，由数据直接生成可打印的合格证 ** //\r\nimport React from 'react';\r\nimport { Button, Tag } from 'antd';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './certificate.module.css';\r\nimport { PrinterOutlined } from '@ant-design/icons';\r\n\r\nconst CertificatePage = () => {\r\n  const { products, arrivalAt } = useLocation().state;\r\n\r\n  const onPrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.noPrint}>\r\n        <Button icon={<PrinterOutlined />} type=\"primary\" onClick={onPrint}>\r\n          打印\r\n        </Button>\r\n      </div>\r\n      <div id=\"certificate-card\" className={styles.cardArea}>\r\n        {products.map((product, index) => (\r\n          <div key={index} className={styles.container}>\r\n            <section className={styles.cardHeader}>\r\n              <p className={styles.title}>SEMEM</p>\r\n              <p>{product.model} Heater</p>\r\n              <p>检验合格证明书</p>\r\n            </section>\r\n            <section className={styles.cardBody}>\r\n              <p>\r\n                名称：\r\n                <span className={styles.productName}>{product.name}</span>\r\n              </p>\r\n              <p>\r\n                检验员：<Tag color=\"red\">0306</Tag>\r\n              </p>\r\n              <p>检验日期：{arrivalAt}</p>\r\n              <p>本产品经检验合格，符合标准，准予出厂。</p>\r\n            </section>\r\n            <section className={styles.cardFooter}>\r\n              <p className={styles.seal}>\r\n                <Tag color=\"red\">西门机电品质检验中心</Tag>\r\n              </p>\r\n              <p>湖南西门机电科技有限公司</p>\r\n            </section>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificatePage;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Result, Spin } from \"antd\";\r\nimport {\r\n  FileAddOutlined,\r\n  TabletOutlined,\r\n  FileImageOutlined,\r\n  FileOutlined,\r\n  ContactsOutlined,\r\n  ProjectOutlined\r\n} from \"@ant-design/icons\";\r\nimport useAuth from \"./hooks/useAuth\";\r\n\r\nimport LoginForm from \"./components/signIn\";\r\nimport WorkStep from \"./components/workStep\";\r\nimport CreateOrderForm from \"./pages/work/order/createOrderForm\";\r\nimport WorkPage from \"./pages/work/order\";\r\nimport CertificatePage from \"./pages/work/order/certificate\";\r\nimport * as ROUTES from \"constants/routes\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n// 懒加载以下组件\r\nconst BusinessInfo = lazy(() => import(\"./pages/work/businessInfo\"));\r\nconst WkProduct = lazy(() => import(\"./pages/work/wk\"));\r\nconst MyPage = lazy(() => import(\"./pages/my\"));\r\nconst CertificatesManagePage = lazy(() =>\r\n  import(\"./pages/work/order/certificatesManage\")\r\n);\r\nconst JrqProduct = lazy(() => import(\"./pages/work/jrq\"));\r\nconst ContractPage = lazy(() => import(\"./pages/work/order/contract\"));\r\nconst OrderDetailPage = lazy(() => import(\"./pages/work/order/orderDetail\"));\r\nconst OrderSpecPage = lazy(() => import(\"./pages/work/order/orderSpec\"));\r\n\r\nfunction App() {\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <Router basename=\"/my-console\">\r\n      <Layout>\r\n        {auth ? (\r\n          <Sider\r\n            style={{\r\n              overflow: \"auto\",\r\n              height: \"100vh\",\r\n              position: \"fixed\",\r\n              left: 0\r\n            }}\r\n          >\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[\"order-table\"]}\r\n            >\r\n              <Menu.Item key=\"create-order\">\r\n                <Link to={ROUTES.CREATE_ORDER}>\r\n                  <FileAddOutlined /> 新建订单\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"order-table\">\r\n                <Link to={ROUTES.WORK_ORDERS}>\r\n                  <TabletOutlined /> 订单\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"certificates\">\r\n                <Link to={ROUTES.WORK_CERTIFICATES}>\r\n                  <FileImageOutlined /> 合格证\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"jrq\">\r\n                <Link to={ROUTES.WORK_JRQ}>\r\n                  <FileOutlined /> 加热器\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"wk\">\r\n                <Link to={ROUTES.WORK_WK}>\r\n                  <FileOutlined /> 温控\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"businessInfo\">\r\n                <Link to={ROUTES.WORK_BUSINESS_INFO}>\r\n                  <ContactsOutlined /> 商务信息\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"my\">\r\n                <Link to={ROUTES.MY_PAGE}>\r\n                  <ProjectOutlined /> 个人事务\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n        ) : null}\r\n        <Layout id=\"main\">\r\n          <Header className={[\"header\", \"noPrint\"]}>\r\n            {auth ? <WorkStep /> : null}\r\n            <LoginForm />\r\n          </Header>\r\n          <Content style={{ margin: \"12px 12px 0\" }}>\r\n            <div style={{ padding: 24, background: \"#fff\" }}>\r\n              <Suspense\r\n                fallback={\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontSize: 32,\r\n                      margin: \"20px 0\",\r\n                      padding: \"30vh 0\"\r\n                    }}\r\n                  >\r\n                    <Spin />\r\n                  </div>\r\n                }\r\n              >\r\n                {auth ? (\r\n                  <Switch>\r\n                    <Route path={ROUTES.CREATE_ORDER} exact>\r\n                      <CreateOrderForm />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_ORDERS} exact>\r\n                      <WorkPage />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_CERTIFICATES} exact>\r\n                      <CertificatesManagePage />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_JRQ} exact>\r\n                      <JrqProduct />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_WK} exact>\r\n                      <WkProduct />\r\n                    </Route>\r\n                    <Route path={ROUTES.MY_PAGE}>\r\n                      <MyPage />\r\n                    </Route>\r\n                    <Route\r\n                      path={ROUTES.ORDER_DETAIL}\r\n                      children={<OrderDetailPage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.ORDER_CONTRACT}/:id`}\r\n                      children={<ContractPage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.CERTIFICATE_PAGE}/:id`}\r\n                      children={<CertificatePage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.ORDER_SPEC}/:id`}\r\n                      children={<OrderSpecPage />}\r\n                      exact\r\n                    />\r\n                    <Route path={ROUTES.WORK_BUSINESS_INFO} exact>\r\n                      <BusinessInfo />\r\n                    </Route>\r\n                    <Route path={ROUTES.HOME_PAGE} exact>\r\n                      <WorkPage />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                      <Result\r\n                        status=\"404\"\r\n                        title=\"404\"\r\n                        subTitle=\"抱歉，您访问的页面不存在\"\r\n                      />\r\n                    </Route>\r\n                  </Switch>\r\n                ) : (\r\n                  <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"抱歉，您没有权限访问该页面\"\r\n                  />\r\n                )}\r\n              </Suspense>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nmoment.locale(\"zh-cn\");\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <App />\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}