{"version":3,"sources":["constants/routes.js","pages/work/order/createOrderForm.module.css","api/firebase/index.js","hooks/useAuth.js","pages/work/order/createOrderForm.js","components/signIn/index.js","components/workStep/index.js","pages/work/order/orderTable.js","pages/work/order/index.js","pages/work/order/certificate.js","pages/work/memo/createMemoForm.js","pages/work/memo/editMemoForm.js","pages/work/memo/memoList.js","pages/work/memo/index.js","App.js","serviceWorker.js","index.js","pages/work/order/certificate.module.css"],"names":["HOME_PAGE","CREATE_ORDER","WORK_ORDERS","WORK_ORDER","ORDER_DETAIL","ORDER_CONTRACT","WORK_CERTIFICATES","CERTIFICATE_PAGE","ORDER_SPEC","WORK_JRQ","WORK_WK","WORK_BUSINESS_INFO","MY_PAGE","MEMO","QQ_MAIL","CRM","module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","serverTimestamp","firebase","firestore","FieldValue","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","onAuthStateChanged","next","fallback","user","orders","db","collection","orderBy","limit","createOrder","order","a","async","add","editOrder","id","updatedData","doc","update","removeOrder","delete","removeCertificates","toggleNameplatePrint","checked","nameplate","toggleCertificatePrint","certificate","certificates","filter","where","createCertificates","certificateInfo","set","finishCertificatesPrint","printDone","sites","createSite","site","getMemo","createMemo","memo","updateMemo","removeMemo","initializeApp","this","useAuth","useState","setAuth","useEffect","LoginForm","props","fieldsError","useForm","form","getFieldsError","getFieldError","isFieldTouched","emailError","passwordError","style","display","alignItems","icon","LogoutOutlined","marginLeft","size","onClick","layout","onFinish","values","then","result","message","success","catch","error","Item","validateStatus","help","name","rules","type","required","prefix","MailOutlined","color","placeholder","LockOutlined","htmlType","disabled","Object","keys","some","field","Step","WorkFlowPage","current","setCurrent","onChange","maxWidth","title","to","ROUTES","href","rel","target","RangePicker","initialProduct","model","material","quantity","weight","flow","heatFrom","heatTo","flangeStandard","pressure","initialProducts","index","push","CreateOrderForm","history","useHistory","location","state","date","consumer","products","flag","items","setItems","submitButtonText","labelCol","offset","span","wrapperCol","length","Array","from","product","orderAt","format","arrivalAt","initialValues","moment","label","whitespace","autoFocus","allowClear","width","noStyle","gutter","className","styles","productRow","map","item","key","pull","productCol","Group","defaultValue","value","Option","min","max","Button","step","MinusOutlined","prev","slice","PlusOutlined","Column","Text","OrderTable","onRemoveOrder","onToggleNameplatePrint","onToggleCertificatePrint","dataSource","rowKey","record","pagination","position","dataIndex","render","text","pathname","split","renderItem","code","copyable","filters","onFilter","handleToggleNameplatePrint","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","productsInfo","forEach","orderId","preparePrintAt","Date","now","handleCertificateChange","DeleteOutlined","EditOutlined","goEditOrder","CopyOutlined","goCopyOrder","WorkPage","setOrders","onSnapshot","snapshot","data","CertificatePage","useLocation","noPrint","PrinterOutlined","window","print","cardArea","container","cardHeader","cardBody","productName","cardFooter","seal","CreateMemoForm","onClose","onCreateMemo","newMemo","createAt","console","log","onFinishFailed","TextArea","autoSize","minRows","EditMemoForm","onUpdateMemo","onRemoveMemo","activeMemo","setFieldsValue","MemoList","memoList","enterEditMode","flex","border","borderRadius","padding","EditTwoTone","whiteSpace","toLocaleDateString","MemoPage","setMemoList","visible","setVisible","mode","setMode","setActiveMemo","docs","showDrawer","closeDrawer","Header","Content","Sider","BusinessInfo","lazy","WkProduct","MyPage","CertificatesManagePage","JrqProduct","ContractPage","OrderDetailPage","OrderSpecPage","App","basename","overflow","height","left","theme","defaultSelectedKeys","FileAddOutlined","TabletOutlined","FileImageOutlined","FileOutlined","ContactsOutlined","ProjectOutlined","BookOutlined","margin","background","textAlign","fontSize","path","exact","children","status","subTitle","Boolean","hostname","match","locale","ReactDOM","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ef09ca.chunk.js","sourcesContent":["// 主页\r\nexport const HOME_PAGE = \"/\";\r\n// 新建订单\r\nexport const CREATE_ORDER = \"/createOrder\";\r\n// 订单列表\r\nexport const WORK_ORDERS = \"/orders\";\r\n// 单个订单\r\nexport const WORK_ORDER = \"/order\";\r\n// 订单详情页面\r\nexport const ORDER_DETAIL = \"/order/:id\";\r\n// 订单合同页面\r\nexport const ORDER_CONTRACT = \"/order/contract\";\r\n// 合格证统一管理页面\r\nexport const WORK_CERTIFICATES = \"/certificates\";\r\n// 合格证页面，由数据直接生成可打印的合格证\r\nexport const CERTIFICATE_PAGE = \"/order/certificate\";\r\n// 订单技术参数页面\r\nexport const ORDER_SPEC = \"/order/spec\";\r\n// 加热器产品\r\nexport const WORK_JRQ = \"/jrq\";\r\n// 温控产品\r\nexport const WORK_WK = \"/wk\";\r\n// 公司商务信息\r\nexport const WORK_BUSINESS_INFO = \"/business\";\r\n\r\n// 个人事务\r\nexport const MY_PAGE = \"/my\";\r\n\r\n// 备忘录\r\nexport const MEMO = \"/memo\";\r\n\r\n// QQ 邮箱\r\nexport const QQ_MAIL =\r\n  \"https://mail.qq.com/cgi-bin/frame_html?sid=2tq_5c2Dt8fOMkEf&r=ba4f18e27a212e38f7e5be5b900066ce\";\r\n\r\n// XTOOLS CRM\r\nexport const CRM = \"https://crm.xtcrm.com/lib/purchase/\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productRow\":\"createOrderForm_productRow__29jCv\",\"productCol\":\"createOrderForm_productCol__1P6Dg\"};","import firebase from \"firebase/app\";\r\n\r\n// These imports load individual services into the firebase namespace.\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(firebaseConfig);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n  }\r\n\r\n  // ** Helper ** //\r\n  serverTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\r\n\r\n  // ** Auth ** //\r\n  createUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  signInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  signOut = () => this.auth.signOut();\r\n\r\n  onAuthStateChanged = (next, fallback) =>\r\n    this.auth.onAuthStateChanged((user) => (user ? next(user) : fallback()));\r\n\r\n  // ** Orders API ** //\r\n\r\n  // 获取订单列表\r\n  orders = () =>\r\n    this.db.collection(\"orders\").orderBy(\"date.orderAt\", \"desc\").limit(100);\r\n\r\n  // 新建订单\r\n  createOrder = async (order) => await this.db.collection(\"orders\").add(order);\r\n\r\n  // 编辑订单\r\n  editOrder = async (id, updatedData) => {\r\n    await this.db.collection(\"orders\").doc(id).update(updatedData);\r\n  };\r\n\r\n  // 删除订单\r\n  removeOrder = async (id) => {\r\n    await this.db.collection(\"orders\").doc(id).delete();\r\n    // 同时也要删除掉对应的合格证数据\r\n    await this.removeCertificates(id);\r\n  };\r\n\r\n  // 铭牌打印切换\r\n  toggleNameplatePrint = async (id, checked) =>\r\n    await this.db.collection(\"orders\").doc(id).update({\r\n      nameplate: checked,\r\n    });\r\n\r\n  // 合格证打印切换\r\n  toggleCertificatePrint = async (id, checked) =>\r\n    await this.db.collection(\"orders\").doc(id).update({\r\n      certificate: checked,\r\n    });\r\n\r\n  // 获取未打印的合格证\r\n  certificates = (filter = \"SHOW_ACTIVE\") => {\r\n    switch (filter) {\r\n      case \"SHOW_ALL\":\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .orderBy(\"arrivalAt\", \"desc\")\r\n          .limit(30);\r\n      case \"SHOW_COMPLETED\":\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .where(\"printDone\", \"==\", true)\r\n          .orderBy(\"arrivalAt\", \"desc\")\r\n          .limit(30);\r\n      default:\r\n        return this.db\r\n          .collection(\"certificates\")\r\n          .where(\"printDone\", \"==\", false)\r\n          .orderBy(\"arrivalAt\", \"desc\");\r\n    }\r\n  };\r\n\r\n  // 新建当前订单的产品合格证\r\n  createCertificates = async (id, certificateInfo) =>\r\n    await this.db.collection(\"certificates\").doc(id).set(certificateInfo);\r\n\r\n  // 移除当前订单的产品合格证\r\n  removeCertificates = async (id) =>\r\n    await this.db.collection(\"certificates\").doc(id).delete();\r\n  // 完成某个订单的产品合格证打印\r\n  finishCertificatesPrint = async (id, checked) =>\r\n    await this.db\r\n      .collection(\"certificates\")\r\n      .doc(id)\r\n      .update({ printDone: checked });\r\n\r\n  // ** Sites API ** //\r\n\r\n  // 获取所有个人网址条目\r\n  sites = () => this.db.collection(\"sites\");\r\n\r\n  // 新建一个网址条目\r\n  createSite = async (site) => await this.db.collection(\"sites\").add(site);\r\n\r\n  // ** Sites API ** //\r\n\r\n  // 获取所有备忘录\r\n  getMemo = () => this.db.collection(\"memo\");\r\n\r\n  // 新建一条备忘录\r\n  createMemo = async (memo) => await this.db.collection(\"memo\").add(memo);\r\n\r\n  // 更新备忘录\r\n  updateMemo = async (memo) =>\r\n    await this.db.collection(\"memo\").doc(memo.id).update(memo);\r\n\r\n  // 删除备忘录\r\n  removeMemo = async (id) => await this.db.collection(\"memo\").doc(id).delete();\r\n}\r\n\r\nexport default new Firebase();\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from '../api/firebase';\r\n\r\nexport default function useAuth() {\r\n  const [auth, setAuth] = useState(null);\r\n  useEffect(() => {\r\n    firebase.onAuthStateChanged(\r\n      user => setAuth(user),\r\n      () => setAuth(null)\r\n    );\r\n  }, []);\r\n\r\n  return auth;\r\n}\r\n","// ** 新建订单页面 ** //\r\nimport React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Radio,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport * as ROUTES from \"constants/routes\";\r\nimport firebase from \"api/firebase\";\r\nimport styles from \"./createOrderForm.module.css\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n// 订单中产品的初始状态\r\n// 为什么需要这个？ 参考：https://github.com/ant-design/ant-design/issues/21816\r\nconst initialProduct = {\r\n  model: \"HQS\",\r\n  material: \"304\",\r\n  quantity: 1,\r\n  weight: 50,\r\n  flow: 20,\r\n  heatFrom: 5,\r\n  heatTo: 65,\r\n  flangeStandard: \"HG/T 20592-2009\",\r\n  pressure: \"1.0\"\r\n};\r\nconst initialProducts = [];\r\n// 单个订单一般不超过 10 个产品\r\nfor (let index = 0; index < 10; index++) {\r\n  initialProducts.push(initialProduct);\r\n}\r\n\r\nconst CreateOrderForm = props => {\r\n  const history = useHistory();\r\n  // 根据 flag 的值判断订单状态：\r\n  // EDIT_ORDER 编辑订单\r\n  // COPY_ORDER 复制订单\r\n  // 其他值都为：新建订单\r\n  // 将部分表单的初始值设置为正在编辑订单的数据\r\n  const { id, date, consumer, products, flag } = history.location.state || {};\r\n\r\n  // 用于动态增删产品\r\n  const [items, setItems] = useState([0]);\r\n\r\n  const addItem = () => setItems(prev => [...prev, 0]);\r\n  const removeItem = () => setItems(prev => prev.slice(0, prev.length - 1));\r\n\r\n  let submitButtonText = \"新建订单\";\r\n\r\n  const onFinish = values => {\r\n    let { date, products } = values;\r\n    // antd v4 改动：嵌套字段使用数组会有一点问题，如下：\r\n    // 假如要选定 products 数组 第一个元素的 name 属性\r\n    // v3 字段路径： 'products.0.name'\r\n    // v4 字段路径：['products', '0', 'name']\r\n    // v4 得到的 products 得到的不是数组，而是属性为数字下标的对象\r\n    // 将 products 添加 length 属性，然后转化为数组\r\n    products.length = Object.keys(products).length;\r\n    products = Array.from(products);\r\n    products.filter(product => product.name);\r\n\r\n    // 下单日期\r\n    const orderAt = date[0].format(\"YYYY-MM-DD\");\r\n    // 到货日期\r\n    const arrivalAt = date[1].format(\"YYYY-MM-DD\");\r\n    // 提交到数据库的单个产品信息\r\n    const order = {\r\n      ...values,\r\n      date: { orderAt, arrivalAt },\r\n      nameplate: false,\r\n      certificate: false,\r\n      products\r\n    };\r\n    // api\r\n    switch (flag) {\r\n      case \"EDIT_ORDER\":\r\n        firebase\r\n          .editOrder(id, order)\r\n          .then(() => {\r\n            message.success(\"订单更新成功\", 1);\r\n            history.push(ROUTES.WORK_ORDERS);\r\n          })\r\n          .catch(error => message.error(error.message));\r\n        submitButtonText = \"更新订单\";\r\n        break;\r\n      case \"COPY_ORDER\":\r\n        firebase\r\n          .createOrder(order)\r\n          .then(() => {\r\n            message.success(\"订单复制成功\", 1);\r\n            history.push(ROUTES.WORK_ORDERS);\r\n          })\r\n          .catch(error => message.error(error.message));\r\n        submitButtonText = \"复制订单\";\r\n        break;\r\n      default:\r\n        firebase\r\n          .createOrder(order)\r\n          .then(() => {\r\n            message.success(\"订单创建成功\", 1);\r\n            history.push(ROUTES.WORK_ORDERS);\r\n          })\r\n          .catch(error => message.error(error.message));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      offset: 2,\r\n      span: 6\r\n    },\r\n    wrapperCol: {\r\n      span: 12\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        consumer: consumer || \"\",\r\n        date: date || [moment(), moment().add(7, \"days\")],\r\n        products: products || initialProducts\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"consumer\"\r\n        label=\"销售客户\"\r\n        wrapperCol={{ span: 8 }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"请输入销售客户\"\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: \"销售客户不能为空白字符\"\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoFocus allowClear />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"date\"\r\n        label=\"货期\"\r\n        wrapperCol={{ span: 8 }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"请输入货期\"\r\n          }\r\n        ]}\r\n      >\r\n        <RangePicker style={{ width: \"100%\" }} />\r\n      </Form.Item>\r\n      <Form.Item noStyle>\r\n        <Row gutter={10} className={styles.productRow}>\r\n          {items.map((item, index) => (\r\n            <Col\r\n              key={index}\r\n              span={8}\r\n              pull={index === 1 ? 8 : 0}\r\n              push={index === 0 ? 8 : 0}\r\n              className={styles.productCol}\r\n            >\r\n              <Form.Item name={[\"products\", `${index}`, \"model\"]} label=\"款式\">\r\n                <Radio.Group defaultValue=\"HQS\">\r\n                  <Radio value=\"HQS\">HQS</Radio>\r\n                  <Radio value=\"HJ\">HJ</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"name\"]}\r\n                label=\"产品型号\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入产品型号\"\r\n                  },\r\n                  {\r\n                    whitespace: true,\r\n                    message: \"产品型号不能为空白字符\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input allowClear />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"material\"]}\r\n                label=\"材质\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请指定材质\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"304\">\r\n                  <Select.Option value=\"304\">304</Select.Option>\r\n                  <Select.Option value=\"碳钢\">碳钢</Select.Option>\r\n                  <Select.Option value=\"外壳碳钢 芯体304\">\r\n                    外壳碳钢 芯体304\r\n                  </Select.Option>\r\n                  <Select.Option value=\"316L\">316L</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"quantity\"]}\r\n                label=\"数量\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入产品数量\"\r\n                  }\r\n                ]}\r\n              >\r\n                <InputNumber min={1} max={99} defaultValue={1} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"weight\"]}\r\n                label=\"重量 kg\"\r\n              >\r\n                <Radio.Group defaultValue={50}>\r\n                  <Radio.Button value={8}>{8}</Radio.Button>\r\n                  <Radio.Button value={15}>{15}</Radio.Button>\r\n                  <Radio.Button value={50}>{50}</Radio.Button>\r\n                  <Radio.Button value={200}>{200}</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"flow\"]}\r\n                label=\"流量 t/h\"\r\n              >\r\n                <InputNumber min={1} max={2000} step={10} defaultValue={20} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"heatFrom\"]}\r\n                label=\"进水温度 °C\"\r\n              >\r\n                <InputNumber min={1} max={160} defaultValue={5} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"heatTo\"]}\r\n                label=\"出水温度 °C\"\r\n              >\r\n                <InputNumber min={1} max={200} defaultValue={65} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"flangeStandard\"]}\r\n                label=\"法兰标准\"\r\n              >\r\n                <Select defaultValue=\"HG/T 20592-2009\">\r\n                  <Select.Option value=\"GB/T 9119-2000\">\r\n                    GB/T 9119-2000\r\n                  </Select.Option>\r\n                  <Select.Option value=\"HG/T 20592-2009\">\r\n                    HG/T 20592-2009\r\n                  </Select.Option>\r\n                  <Select.Option value=\"GB/T 9119-2010\">\r\n                    GB/T 9119-2000\r\n                  </Select.Option>\r\n                  <Select.Option value=\"HG/T 20615-2009\">\r\n                    HG/T 20615-2009\r\n                  </Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={[\"products\", `${index}`, \"pressure\"]}\r\n                label=\"压力 MPa\"\r\n              >\r\n                1.0\r\n              </Form.Item>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ span: 8, offset: 8 }}>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {submitButtonText}\r\n        </Button>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button.Group>\r\n          <Button\r\n            disabled={items.length <= 1}\r\n            icon={<MinusOutlined />}\r\n            onClick={removeItem}\r\n          >\r\n            删除产品\r\n          </Button>\r\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={addItem}>\r\n            增加产品\r\n          </Button>\r\n        </Button.Group>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrderForm;\r\n","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { LogoutOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport firebase from '../../api/firebase';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nconst LoginForm = props => {\r\n  const user = useAuth();\r\n  const email = user && user.email;\r\n\r\n  const onFinish = values => {\r\n    const { email, password } = values;\r\n    firebase\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        message.success('欢迎', 1);\r\n      })\r\n      .catch(error => message.error(error.message));\r\n  };\r\n\r\n  const signOut = () => {\r\n    firebase.signOut();\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n  const { getFieldsError, getFieldError, isFieldTouched } = form;\r\n\r\n  // Only show error after a field is touched.\r\n  const emailError = isFieldTouched('email') && getFieldError('email');\r\n  const passwordError = isFieldTouched('password') && getFieldError('password');\r\n\r\n  return email ? (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <Button\r\n        icon={<LogoutOutlined />}\r\n        style={{ marginLeft: 20 }}\r\n        size=\"small\"\r\n        onClick={signOut}\r\n      >\r\n        登出\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <Form layout=\"inline\" onFinish={onFinish} form={form}>\r\n      <Form.Item\r\n        validateStatus={emailError ? 'error' : ''}\r\n        help={emailError || ''}\r\n        name=\"email\"\r\n        rules={[\r\n          { type: 'email', message: '无效的电子邮箱' },\r\n          { required: true, message: '请输入你的电子邮箱' },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"电子邮件\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        validateStatus={passwordError ? 'error' : ''}\r\n        help={passwordError || ''}\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          disabled={hasErrors(getFieldsError())}\r\n        >\r\n          登录\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// ** 工作步骤组件 ** //\r\nimport React, { useState } from \"react\";\r\nimport { Steps } from \"antd\";\r\nimport * as ROUTES from \"constants/routes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst WorkFlowPage = props => {\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const handleChange = current => {\r\n    setCurrent(current);\r\n  };\r\n\r\n  return (\r\n    <Steps\r\n      current={current}\r\n      size=\"small\"\r\n      onChange={handleChange}\r\n      style={{ maxWidth: 900 }}\r\n    >\r\n      <Step title={<Link to={ROUTES.WORK_JRQ}>参数确认</Link>} />\r\n      <Step title={<Link to={ROUTES.CREATE_ORDER}>新建订单</Link>} />\r\n      <Step\r\n        title={\r\n          <a href={ROUTES.QQ_MAIL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            发送合同\r\n          </a>\r\n        }\r\n      />\r\n      <Step\r\n        title={\r\n          <a href={ROUTES.CRM} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            XTools\r\n          </a>\r\n        }\r\n      />\r\n      <Step title={<Link to={ROUTES.WORK_ORDERS}>铭牌打印</Link>} />\r\n      <Step title={<Link to={ROUTES.WORK_CERTIFICATES}>合格证打印</Link>} />\r\n    </Steps>\r\n  );\r\n};\r\n\r\nexport default WorkFlowPage;\r\n","// ** 合同列表页面 ** //\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Divider,\r\n  Button,\r\n  Switch,\r\n  List,\r\n  Typography,\r\n  Tag,\r\n  message\r\n} from \"antd\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nimport * as ROUTES from \"constants/routes\";\r\n\r\nconst { Column } = Table;\r\nconst { Text } = Typography;\r\n\r\nconst OrderTable = props => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    orders,\r\n    onRemoveOrder,\r\n    onToggleNameplatePrint,\r\n    onToggleCertificatePrint,\r\n    createCertificates,\r\n    removeCertificates\r\n  } = props;\r\n\r\n  const goCreateOrder = () => history.push(ROUTES.CREATE_ORDER);\r\n\r\n  const goEditOrder = record =>\r\n    history.push(ROUTES.CREATE_ORDER, { ...record, flag: \"EDIT_ORDER\" });\r\n\r\n  const goCopyOrder = record =>\r\n    history.push(ROUTES.CREATE_ORDER, { ...record, flag: \"COPY_ORDER\" });\r\n\r\n  const handleCertificateChange = async (record, checked) => {\r\n    const {\r\n      id,\r\n      products,\r\n      date: { arrivalAt }\r\n    } = record;\r\n\r\n    await onToggleCertificatePrint(id, checked);\r\n    // firestore 对于元素类型为对象的数组支持比较差\r\n    // 为了适应 firestore 的数据结构，将 products 转化成对象结构\r\n    const productsInfo = {};\r\n    products.forEach(product => {\r\n      const { name, quantity, model } = product;\r\n      productsInfo[name] = {\r\n        model,\r\n        quantity\r\n      };\r\n    });\r\n    const certificateInfo = {\r\n      arrivalAt, // 用作检验日期\r\n      orderId: id, // 对应的订单 id\r\n      products: productsInfo,\r\n      printDone: false, // 是否已打印\r\n      preparePrintAt: Date.now() // 准备打印日期\r\n    };\r\n    // 选中则新建该订单下所有产品的合格证，不选中则删除该订单下所有产品的合格证\r\n    checked\r\n      ? await createCertificates(id, certificateInfo)\r\n      : await removeCertificates(id);\r\n  };\r\n\r\n  const handleToggleNameplatePrint = async (id, checked) => {\r\n    await onToggleNameplatePrint(id, checked);\r\n  };\r\n\r\n  const handleRemoveOrder = async orderId => {\r\n    try {\r\n      await onRemoveOrder(orderId);\r\n      message.success(\"删除订单成功\", 1);\r\n    } catch (error) {\r\n      message.error(\"删除订单失败\", 2.5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={goCreateOrder}>\r\n        新建订单\r\n      </Button>\r\n      <Table\r\n        dataSource={orders}\r\n        rowKey={record => record.id}\r\n        pagination={{ position: \"top\" }}\r\n        size=\"middle\"\r\n      >\r\n        <Column\r\n          title=\"产品\"\r\n          dataIndex=\"product\"\r\n          key=\"product\"\r\n          render={(text, record) => (\r\n            <Link\r\n              to={{\r\n                pathname: `${ROUTES.WORK_ORDER}/${record.id}`,\r\n                state: record\r\n              }}\r\n            >\r\n              <List\r\n                size=\"small\"\r\n                split={false}\r\n                dataSource={record.products}\r\n                renderItem={product => (\r\n                  <List.Item>\r\n                    <span>\r\n                      <Tag color=\"blue\">\r\n                        <span>{product.name}</span>\r\n                      </Tag>\r\n                      <Text code>\r\n                        <span>{product.quantity}</span>\r\n                      </Text>\r\n                    </span>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Link>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"销售客户\"\r\n          dataIndex=\"consumer\"\r\n          key=\"consumer\"\r\n          render={text => <Text copyable>{text}</Text>}\r\n        />\r\n        <Column\r\n          title=\"采购日期\"\r\n          dataIndex=\"orderAt\"\r\n          key=\"orderAt\"\r\n          render={(text, record) => (\r\n            <span>{record.date && record.date.orderAt}</span>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"铭牌\"\r\n          dataIndex=\"nameplate\"\r\n          key=\"nameplate\"\r\n          filters={[\r\n            { text: \"已打印\", value: true },\r\n            { text: \"未打印\", value: false }\r\n          ]}\r\n          onFilter={(value, record) => record.nameplate === value}\r\n          render={(text, record) => (\r\n            <Switch\r\n              checked={record.nameplate}\r\n              onChange={checked =>\r\n                handleToggleNameplatePrint(record.id, checked)\r\n              }\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              defaultChecked\r\n            />\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"合格证\"\r\n          dataIndex=\"certificate\"\r\n          key=\"certificate\"\r\n          filters={[\r\n            { text: \"已打印\", value: true },\r\n            { text: \"未打印\", value: false }\r\n          ]}\r\n          onFilter={(value, record) => record.certificate === value}\r\n          render={(text, record) => (\r\n            <Switch\r\n              checked={record.certificate}\r\n              onChange={checked => handleCertificateChange(record, checked)}\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              defaultChecked\r\n            />\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"操作\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <span>\r\n              <Button\r\n                type=\"link\"\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => handleRemoveOrder(record.id)}\r\n              />\r\n              <Divider type=\"vertical\" />\r\n              <Button\r\n                type=\"link\"\r\n                icon={<EditOutlined />}\r\n                onClick={() => goEditOrder(record)}\r\n              />\r\n              <Divider type=\"vertical\" />\r\n              <Button\r\n                type=\"link\"\r\n                icon={<CopyOutlined />}\r\n                onClick={() => goCopyOrder(record)}\r\n              />\r\n            </span>\r\n          )}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport firebase from \"api/firebase\";\r\nimport OrderTable from \"./orderTable\";\r\n\r\nconst WorkPage = props => {\r\n  const [orders, setOrders] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.orders().onSnapshot(snapshot => {\r\n      const orders = [];\r\n      // doc.data() 得到的仅仅是用于展示目的的数据，拼接 id 属性进去，利于后续操作单个对应的订单\r\n      snapshot.forEach(doc => orders.push({ ...doc.data(), id: doc.id }));\r\n      setOrders(orders);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const removeOrder = async id => {\r\n    await firebase.removeOrder(id);\r\n  };\r\n\r\n  const toggleNameplatePrint = async (id, checked) => {\r\n    await firebase.toggleNameplatePrint(id, checked);\r\n  };\r\n\r\n  const toggleCertificatePrint = async (id, checked) => {\r\n    await firebase.toggleCertificatePrint(id, checked);\r\n  };\r\n\r\n  const createCertificates = async (id, certificateInfo) => {\r\n    await firebase.createCertificates(id, certificateInfo);\r\n  };\r\n\r\n  const removeCertificates = async id => await firebase.removeCertificates(id);\r\n\r\n  return (\r\n    <div>\r\n      {orders ? (\r\n        <OrderTable\r\n          orders={orders}\r\n          onRemoveOrder={removeOrder}\r\n          onToggleNameplatePrint={toggleNameplatePrint}\r\n          onToggleCertificatePrint={toggleCertificatePrint}\r\n          createCertificates={createCertificates}\r\n          removeCertificates={removeCertificates}\r\n        />\r\n      ) : (\r\n        <Spin />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkPage;\r\n","// ** 合格证页面，由数据直接生成可打印的合格证 ** //\r\nimport React from 'react';\r\nimport { Button, Tag } from 'antd';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './certificate.module.css';\r\nimport { PrinterOutlined } from '@ant-design/icons';\r\n\r\nconst CertificatePage = () => {\r\n  const { products, arrivalAt } = useLocation().state;\r\n\r\n  const onPrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.noPrint}>\r\n        <Button icon={<PrinterOutlined />} type=\"primary\" onClick={onPrint}>\r\n          打印\r\n        </Button>\r\n      </div>\r\n      <div id=\"certificate-card\" className={styles.cardArea}>\r\n        {products.map((product, index) => (\r\n          <div key={index} className={styles.container}>\r\n            <section className={styles.cardHeader}>\r\n              <p className={styles.title}>SEMEM</p>\r\n              <p>{product.model} Heater</p>\r\n              <p>检验合格证明书</p>\r\n            </section>\r\n            <section className={styles.cardBody}>\r\n              <p>\r\n                名称：\r\n                <span className={styles.productName}>{product.name}</span>\r\n              </p>\r\n              <p>\r\n                检验员：<Tag color=\"red\">0306</Tag>\r\n              </p>\r\n              <p>检验日期：{arrivalAt}</p>\r\n              <p>本产品经检验合格，符合标准，准予出厂。</p>\r\n            </section>\r\n            <section className={styles.cardFooter}>\r\n              <p className={styles.seal}>\r\n                <Tag color=\"red\">西门机电品质检验中心</Tag>\r\n              </p>\r\n              <p>湖南西门机电科技有限公司</p>\r\n            </section>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificatePage;\r\n","/* 新建备忘录表单 */\r\nimport React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst CreateMemoForm = ({ onClose, onCreateMemo }) => {\r\n  const onFinish = (values) => {\r\n    const newMemo = { ...values, createAt: Date.now() };\r\n    onCreateMemo(newMemo);\r\n    console.log(\"提交的备忘录：\", newMemo);\r\n  };\r\n  const onFinishFailed = () => {};\r\n\r\n  return (\r\n    <Form onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n      <Form.Item name=\"title\" rules={[{ required: true, whitespace: true }]}>\r\n        <Input placeholder=\"标题\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"text\" rules={[{ required: true, whitespace: true }]}>\r\n        <Input.TextArea\r\n          autoSize={{ minRows: 2 }}\r\n          placeholder=\"在这里记录\"\r\n          allowClear\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={onClose}>取消</Button>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateMemoForm;\r\n","/* 编辑备忘录表单 */\r\nimport React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst EditMemoForm = ({ onClose, onUpdateMemo, onRemoveMemo, activeMemo }) => {\r\n  const [form] = Form.useForm();\r\n  form.setFieldsValue(activeMemo);\r\n\r\n  const onFinish = (values) => {\r\n    const newMemo = { ...activeMemo, ...values, createAt: Date.now() };\r\n    onUpdateMemo(newMemo);\r\n    console.log(\"提交的备忘录：\", newMemo);\r\n  };\r\n\r\n  const onFinishFailed = () => {};\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n      <Form.Item name=\"title\">\r\n        <Input placeholder=\"标题\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"text\">\r\n        <Input.TextArea\r\n          autoSize={{ minRows: 2 }}\r\n          placeholder=\"在这里记录\"\r\n          allowClear\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={onClose}>取消</Button>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={onRemoveMemo} type=\"danger\" icon={<DeleteOutlined />}>\r\n          删除\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditMemoForm;\r\n","import React from \"react\";\r\nimport { Col, Button } from \"antd\";\r\nimport { EditTwoTone } from \"@ant-design/icons\";\r\n\r\nconst MemoList = ({ memoList, enterEditMode }) => {\r\n  return memoList.map((memo) => (\r\n    <Col flex=\"1 1 300px\" key={memo.id}>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #dedede\",\r\n          borderRadius: 6,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        <h3>\r\n          {memo.title}\r\n          <Button\r\n            type=\"link\"\r\n            icon={<EditTwoTone />}\r\n            onClick={() => enterEditMode(memo)}\r\n          ></Button>\r\n        </h3>\r\n        <div style={{ whiteSpace: \"pre-line\" }}>{memo.text}</div>\r\n        <sub>{new Date(memo.createAt).toLocaleDateString(\"zh-hans\")}</sub>\r\n      </div>\r\n    </Col>\r\n  ));\r\n};\r\n\r\nexport default MemoList;\r\n","/* 备忘录页面 */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Row, Button, Drawer, Divider, message } from \"antd\";\r\nimport firebase from \"api/firebase\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport CreateMemoForm from \"./createMemoForm\";\r\nimport EditMemoForm from \"./editMemoForm\";\r\nimport MemoList from \"./memoList\";\r\n\r\nconst MemoPage = (props) => {\r\n  const [memoList, setMemoList] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n  // 新建模式 create 或者 编辑模式 edit\r\n  const [mode, setMode] = useState(\"create\");\r\n  // 正在被编辑的备忘录\r\n  const [activeMemo, setActiveMemo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .getMemo()\r\n      .orderBy(\"createAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const memoList = snapshot.docs.map((doc) => ({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        }));\r\n        setMemoList(memoList);\r\n      });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const createMemo = async (memo) => {\r\n    try {\r\n      await firebase.createMemo(memo);\r\n      message.success(\"新建成功\");\r\n    } catch (error) {\r\n      message.error(`新建失败：${error.message}`, 2.5);\r\n    } finally {\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  const enterCreateMode = () => {\r\n    setMode(\"create\");\r\n    setActiveMemo(null);\r\n    showDrawer();\r\n  };\r\n\r\n  const enterEditMode = (memo) => {\r\n    setMode(\"edit\");\r\n    setActiveMemo((prev) => ({ ...prev, ...memo }));\r\n    showDrawer();\r\n  };\r\n\r\n  const updateMemo = async (memo) => {\r\n    try {\r\n      await firebase.updateMemo(memo);\r\n      message.success(\"更新成功\");\r\n    } catch (error) {\r\n      message.error(`更新失败：${error.message}`, 2.5);\r\n    } finally {\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  const removeMemo = async () => {\r\n    try {\r\n      await firebase.removeMemo(activeMemo.id);\r\n      message.success(\"删除成功\");\r\n    } catch (error) {\r\n      message.error(`删除失败:${error.message}`, 2.5);\r\n    } finally {\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" icon={<PlusOutlined />} onClick={enterCreateMode}>\r\n        新建备忘录\r\n      </Button>\r\n      <Divider />\r\n      <Row gutter={[16, 16]}>\r\n        {memoList && (\r\n          <MemoList memoList={memoList} enterEditMode={enterEditMode} />\r\n        )}\r\n      </Row>\r\n      <Drawer\r\n        width={720}\r\n        onClose={closeDrawer}\r\n        visible={visible}\r\n        title={mode === \"create\" ? \"新建备忘录\" : \"编辑备忘录\"}\r\n      >\r\n        {mode === \"create\" ? (\r\n          <CreateMemoForm onClose={closeDrawer} onCreateMemo={createMemo} />\r\n        ) : (\r\n          <EditMemoForm\r\n            onClose={closeDrawer}\r\n            onUpdateMemo={updateMemo}\r\n            activeMemo={activeMemo}\r\n            onRemoveMemo={removeMemo}\r\n          />\r\n        )}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoPage;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Result, Spin } from \"antd\";\r\nimport {\r\n  FileAddOutlined,\r\n  TabletOutlined,\r\n  FileImageOutlined,\r\n  FileOutlined,\r\n  ContactsOutlined,\r\n  ProjectOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport useAuth from \"./hooks/useAuth\";\r\n\r\nimport LoginForm from \"./components/signIn\";\r\nimport WorkStep from \"./components/workStep\";\r\nimport CreateOrderForm from \"./pages/work/order/createOrderForm\";\r\nimport WorkPage from \"./pages/work/order\";\r\nimport CertificatePage from \"./pages/work/order/certificate\";\r\nimport MemoPage from \"./pages/work/memo\";\r\nimport * as ROUTES from \"constants/routes\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n// 懒加载以下组件\r\nconst BusinessInfo = lazy(() => import(\"./pages/work/businessInfo\"));\r\nconst WkProduct = lazy(() => import(\"./pages/work/wk\"));\r\nconst MyPage = lazy(() => import(\"./pages/my\"));\r\nconst CertificatesManagePage = lazy(() =>\r\n  import(\"./pages/work/order/certificatesManage\")\r\n);\r\nconst JrqProduct = lazy(() => import(\"./pages/work/jrq\"));\r\nconst ContractPage = lazy(() => import(\"./pages/work/order/contract\"));\r\nconst OrderDetailPage = lazy(() => import(\"./pages/work/order/orderDetail\"));\r\nconst OrderSpecPage = lazy(() => import(\"./pages/work/order/orderSpec\"));\r\n\r\nfunction App() {\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <Router basename=\"/my-console\">\r\n      <Layout>\r\n        {auth ? (\r\n          <Sider\r\n            style={{\r\n              overflow: \"auto\",\r\n              height: \"100vh\",\r\n              position: \"fixed\",\r\n              left: 0,\r\n            }}\r\n          >\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[\"order-table\"]}\r\n            >\r\n              <Menu.Item key=\"create-order\">\r\n                <Link to={ROUTES.CREATE_ORDER}>\r\n                  <FileAddOutlined /> 新建订单\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"order-table\">\r\n                <Link to={ROUTES.WORK_ORDERS}>\r\n                  <TabletOutlined /> 订单\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"certificates\">\r\n                <Link to={ROUTES.WORK_CERTIFICATES}>\r\n                  <FileImageOutlined /> 合格证\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"jrq\">\r\n                <Link to={ROUTES.WORK_JRQ}>\r\n                  <FileOutlined /> 加热器\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"wk\">\r\n                <Link to={ROUTES.WORK_WK}>\r\n                  <FileOutlined /> 温控\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"businessInfo\">\r\n                <Link to={ROUTES.WORK_BUSINESS_INFO}>\r\n                  <ContactsOutlined /> 商务信息\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"my\">\r\n                <Link to={ROUTES.MY_PAGE}>\r\n                  <ProjectOutlined /> 个人事务\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"memo\">\r\n                <Link to={ROUTES.MEMO}>\r\n                  <BookOutlined /> 备忘录\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n        ) : null}\r\n        <Layout id=\"main\">\r\n          <Header className={[\"header\", \"noPrint\"]}>\r\n            {auth ? <WorkStep /> : null}\r\n            <LoginForm />\r\n          </Header>\r\n          <Content style={{ margin: \"12px 12px 0\" }}>\r\n            <div style={{ padding: 24, background: \"#fff\" }}>\r\n              <Suspense\r\n                fallback={\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontSize: 32,\r\n                      margin: \"20px 0\",\r\n                      padding: \"30vh 0\",\r\n                    }}\r\n                  >\r\n                    <Spin />\r\n                  </div>\r\n                }\r\n              >\r\n                {auth ? (\r\n                  <Switch>\r\n                    <Route path={ROUTES.CREATE_ORDER} exact>\r\n                      <CreateOrderForm />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_ORDERS} exact>\r\n                      <WorkPage />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_CERTIFICATES} exact>\r\n                      <CertificatesManagePage />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_JRQ} exact>\r\n                      <JrqProduct />\r\n                    </Route>\r\n                    <Route path={ROUTES.WORK_WK} exact>\r\n                      <WkProduct />\r\n                    </Route>\r\n                    <Route path={ROUTES.MY_PAGE}>\r\n                      <MyPage />\r\n                    </Route>\r\n                    <Route\r\n                      path={ROUTES.ORDER_DETAIL}\r\n                      children={<OrderDetailPage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.ORDER_CONTRACT}/:id`}\r\n                      children={<ContractPage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.CERTIFICATE_PAGE}/:id`}\r\n                      children={<CertificatePage />}\r\n                      exact\r\n                    />\r\n                    <Route\r\n                      path={`${ROUTES.ORDER_SPEC}/:id`}\r\n                      children={<OrderSpecPage />}\r\n                      exact\r\n                    />\r\n                    <Route path={ROUTES.WORK_BUSINESS_INFO} exact>\r\n                      <BusinessInfo />\r\n                    </Route>\r\n                    <Route path={ROUTES.MEMO} exact>\r\n                      <MemoPage />\r\n                    </Route>\r\n                    <Route path={ROUTES.HOME_PAGE} exact>\r\n                      <WorkPage />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                      <Result\r\n                        status=\"404\"\r\n                        title=\"404\"\r\n                        subTitle=\"抱歉，您访问的页面不存在\"\r\n                      />\r\n                    </Route>\r\n                  </Switch>\r\n                ) : (\r\n                  <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"抱歉，您没有权限访问该页面\"\r\n                  />\r\n                )}\r\n              </Suspense>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nmoment.locale(\"zh-cn\");\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <App />\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planArea\":\"certificate_planArea__Ku4DY\",\"ellipsis\":\"certificate_ellipsis__1UwWW\",\"filter\":\"certificate_filter__2Fpk4\",\"cardActions\":\"certificate_cardActions__xKUap\",\"cardArea\":\"certificate_cardArea__2NJDz\",\"container\":\"certificate_container__1oyF_\",\"hiddenButton\":\"certificate_hiddenButton__23geO\",\"cardHeader\":\"certificate_cardHeader__20zAE\",\"title\":\"certificate_title__18uRd\",\"cardBody\":\"certificate_cardBody__3lkfM\",\"cardFooter\":\"certificate_cardFooter__1ml_S\",\"seal\":\"certificate_seal__88Drb\",\"productName\":\"certificate_productName__3mbgT\",\"main\":\"certificate_main__1f8eu\",\"noPrint\":\"certificate_noPrint__3MVFm\"};"],"sourceRoot":""}